{"version":3,"sources":["webpack://jsconfjp-2021/./src/components/Breadcrumb.tsx","webpack://jsconfjp-2021/./src/components/ResponsiveBox.tsx","webpack://jsconfjp-2021/./src/components/Title.tsx","webpack://jsconfjp-2021/./src/components/Sponsor.tsx","webpack://jsconfjp-2021/./src/components/SponsorList.tsx","webpack://jsconfjp-2021/./src/pages/sponsors.tsx"],"names":["Box","styled","Text","theme","fonts","header","Breadcrumb","props","path","t","useTranslation","Link","to","filter","Boolean","map","label","key","innerWidth","ResponsiveBox","children","Title","OutboundLink","colors","border","base","Img","breakpoints","mobile","Sponsor","logoUrl","url","grade","name","href","target","src","width","className","alt","baseGridStyle","css","PlatinumBox","GoldBox","OtherBox","SubTitle","SponsorList","sponsors","grades","reduce","acc","sponsor","concat","platinum","gold","silver","bronze","platinumSponsor","goldSponsor","silverSponsor","bronzeSponsor","SponsorsPage","useStaticQuery","allSponsorsYaml","edges","node","Layout","title","description"],"mappings":"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","file":"component---src-pages-sponsors-tsx-cd8c2341adb8c3cc1114.js","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport { useTranslation } from \"react-i18next\"\nimport { Link } from \"gatsby\"\n\nexport type Props = {\n  path: (string | { label: string; to: string })[]\n}\n\nconst Box = styled.div`\n  display: flex;\n`\nconst Text = styled.span`\n  margin-right: 0.5em;\n  font-size: 1.4rem;\n  font-weight: bold;\n  text-transform: uppercase;\n  font-family: ${({ theme }) => theme.fonts.header};\n  text-transform: uppercase;\n`\n\nexport function Breadcrumb(props: Props) {\n  const { path } = props\n  const { t } = useTranslation()\n\n  return (\n    <Box>\n      <Link to=\"/\">\n        <Text>{t(\"top\")}</Text>\n      </Link>\n      {path.filter(Boolean).map(label => {\n        const path = typeof label === \"string\" ? { label, to: null } : label\n        return (\n          <React.Fragment key={path.label}>\n            <Text>&gt;</Text>\n            {path.to ? (\n              <Link to={path.to}>\n                <Text>{path.label}</Text>\n              </Link>\n            ) : (\n              <Text>{path.label}</Text>\n            )}\n          </React.Fragment>\n        )\n      })}\n    </Box>\n  )\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nexport type Props = {\n  children: React.ReactNode\n}\n\nconst Box = styled.div`\n  width: 100%;\n  max-width: ${({ theme }) => theme.innerWidth};\n  padding: 2em 1em 5em;\n  margin: 0 auto;\n  box-sizing: border-box;\n`\n\nexport function ResponsiveBox(props: Props) {\n  const { children } = props\n\n  return <Box>{children}</Box>\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nexport type Props = {\n  children: React.ReactNode\n}\n\nconst Box = styled.h1`\n  text-align: center;\n  margin: 40px 0 60px;\n  font-size: 4rem;\n  text-transform: none;\n  font-family: ${({ theme }) => theme.fonts.header};\n`\n\nexport function Title(props: Props) {\n  const { children } = props\n\n  return <Box>{children}</Box>\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { OutboundLink } from \"gatsby-plugin-google-analytics\"\n\nconst Box = styled(OutboundLink)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 1px solid ${({ theme }) => theme.colors.border};\n  background-color: ${({ theme }) => theme.colors.base};\n  font-size: 0;\n`\nconst Img = styled.img`\n  padding: 20px;\n  object-fit: contain;\n  box-sizing: border-box;\n  width: 100%;\n\n  &.platinum {\n    width: 780px;\n    height: 200px;\n\n    ${({ theme }) => theme.breakpoints.mobile} {\n      width: 100%;\n      max-width: 780px;\n      max-height: 160px;\n    }\n  }\n  &.gold {\n    width: 100%;\n    max-width: 440px;\n    max-height: 125px;\n  }\n  &.silver,\n  &.bronze {\n    width: 100%;\n    max-width: 273px;\n    max-height: 97px;\n  }\n\n  ${({ theme }) => theme.breakpoints.mobile} {\n    padding: 10px;\n\n    &.bronze {\n      width: 100%;\n      max-width: 273px;\n      max-height: 40px;\n    }\n  }\n`\n\nexport type Props = {\n  grade: \"platinum\" | \"gold\" | \"silver\" | \"bronze\"\n  logoUrl: string\n  name: string\n  url: string\n}\n\nexport function Sponsor(props: Props) {\n  const { logoUrl, url, grade, name } = props\n\n  return (\n    <Box href={url} target=\"_blank\">\n      <Img src={logoUrl} width=\"100%\" className={grade} alt={name} />\n    </Box>\n  )\n}\n","import React from \"react\"\nimport styled, { css } from \"styled-components\"\nimport { useTranslation } from \"react-i18next\"\nimport { Sponsor, Props as SponsorType } from \"./Sponsor\"\n\nexport type Props = {\n  sponsors: SponsorType[]\n}\n\nconst baseGridStyle = css`\n  grid-column-gap: 60px;\n  grid-row-gap: 30px;\n\n  ${({ theme }) => theme.breakpoints.mobile} {\n    grid-column-gap: 20px;\n    grid-row-gap: 20px;\n  }\n`\n\nconst PlatinumBox = styled.div`\n  display: grid;\n  grid-template-columns: repeat(1, 1fr);\n  width: 100%;\n  max-width: 780px;\n  margin: 0 auto;\n  ${baseGridStyle}\n`\nconst GoldBox = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  ${baseGridStyle}\n`\nconst OtherBox = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  ${baseGridStyle}\n`\nconst SubTitle = styled.h3`\n  font-family: ${({ theme }) => theme.fonts.header};\n  text-align: center;\n  font-size: 3rem;\n`\n\nexport function SponsorList(props: Props) {\n  const { sponsors } = props\n  const { t } = useTranslation()\n  const grades = sponsors.reduce(\n    (acc, sponsor) => ({\n      ...acc,\n      [sponsor.grade]: acc[sponsor.grade].concat([sponsor])\n    }),\n    {\n      platinum: [],\n      gold: [],\n      silver: [],\n      bronze: []\n    } as { [K in SponsorType[\"grade\"]]: SponsorType[] }\n  )\n\n  return (\n    <>\n      <SubTitle>{t(\"sponsor.platinum\")}</SubTitle>\n      <PlatinumBox>\n        {grades.platinum.map(platinumSponsor => (\n          <Sponsor key={platinumSponsor.url} {...platinumSponsor} />\n        ))}\n      </PlatinumBox>\n\n      <SubTitle>{t(\"sponsor.gold\")}</SubTitle>\n      <GoldBox>\n        {grades.gold.map(goldSponsor => (\n          <Sponsor key={goldSponsor.url} {...goldSponsor} />\n        ))}\n      </GoldBox>\n\n      <SubTitle>{t(\"sponsor.silver\")}</SubTitle>\n      <OtherBox>\n        {grades.silver.map(silverSponsor => (\n          <Sponsor key={silverSponsor.url} {...silverSponsor} />\n        ))}\n      </OtherBox>\n\n      <SubTitle>{t(\"sponsor.bronze\")}</SubTitle>\n      <OtherBox>\n        {grades.bronze.map(bronzeSponsor => (\n          <Sponsor key={bronzeSponsor.url} {...bronzeSponsor} />\n        ))}\n      </OtherBox>\n    </>\n  )\n}\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { useTranslation } from \"react-i18next\"\n\nimport { Layout } from \"../components/Layout\"\nimport { SEO } from \"../components/Seo\"\nimport { Title } from \"../components/Title\"\nimport { SponsorList } from \"../components/SponsorList\"\nimport { ResponsiveBox } from \"../components/ResponsiveBox\"\nimport { Breadcrumb } from \"../components/Breadcrumb\"\n\nexport default function SponsorsPage() {\n  const data = useStaticQuery(graphql`\n    query Sponsors {\n      allSponsorsYaml {\n        edges {\n          node {\n            name\n            grade\n            url\n            logoUrl\n          }\n        }\n      }\n    }\n  `)\n  const sponsors = data.allSponsorsYaml.edges.map(({ node }: any) => node)\n  const { t } = useTranslation()\n\n  return (\n    <Layout>\n      <SEO title={t(\"sponsors\")} description={t(\"sponsors.description\")} />\n      <ResponsiveBox>\n        <Breadcrumb path={[t(\"sponsors\")]} />\n        <Title>{t(\"sponsors\")}</Title>\n        <SponsorList sponsors={sponsors} />\n      </ResponsiveBox>\n    </Layout>\n  )\n}\n"],"sourceRoot":""}