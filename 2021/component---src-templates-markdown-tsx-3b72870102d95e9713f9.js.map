{"version":3,"file":"component---src-templates-markdown-tsx-3b72870102d95e9713f9.js","mappings":"4LASMA,EAAMC,EAAAA,QAAAA,IAAAA,WAAH,0DAAGA,CAAH,mBAGHC,EAAOD,EAAAA,QAAAA,KAAAA,WAAH,2DAAGA,CAAH,6HAKO,qBAAGE,MAAkBC,MAAMC,UAIrC,SAASC,EAAWC,GACzB,IAAQC,EAASD,EAATC,KACAC,GAAMC,EAAAA,EAAAA,KAAND,EAER,OACE,gBAACT,EAAD,KACE,gBAAC,EAAAW,KAAD,CAAMC,GAAG,KACP,gBAACV,EAAD,KAAOO,EAAE,SAEVD,EAAKK,OAAOC,SAASC,KAAI,SAAAC,GACxB,IAAMR,EAAwB,iBAAVQ,EAAqB,CAAEA,MAAAA,EAAOJ,GAAI,MAASI,EAC/D,OACE,gBAAC,WAAD,CAAgBC,IAAKT,EAAKQ,OACxB,gBAACd,EAAD,UACCM,EAAKI,GACJ,gBAAC,EAAAD,KAAD,CAAMC,GAAIJ,EAAKI,IACb,gBAACV,EAAD,KAAOM,EAAKQ,QAGd,gBAACd,EAAD,KAAOM,EAAKQ,c,mECjCpBhB,E,KAAMC,QAAAA,IAAAA,WAAH,6DAAGA,CAAH,uFAEM,qBAAGE,MAAkBe,cAM7B,SAASC,EAAcZ,GAC5B,IAAQa,EAAab,EAAba,SAER,OAAO,gBAACpB,EAAD,KAAMoB,K,mECXTpB,E,KAAMC,QAAAA,GAAAA,WAAH,sDAAGA,CAAH,8FAKQ,qBAAGE,MAAkBC,MAAMC,UAGrC,SAASgB,EAAMd,GACpB,IAAQa,EAAab,EAAba,SAER,OAAO,gBAACpB,EAAD,KAAMoB,K,yICKTpB,EAAMC,EAAAA,QAAAA,IAAAA,WAAH,yDAAGA,CAAH,sBACQ,qBAAGE,MAAkBC,MAAMC,UAG7B,SAASiB,EAASf,GAC/B,IACiBgB,EACbhB,EADFiB,YAAeD,KAGAE,EAEbF,EAFFG,YAAeD,MACfE,EACEJ,EADFI,KAGF,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKF,MAAOA,IACZ,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAYjB,KAAM,CAACiB,KACnB,gBAAC,IAAD,KAAQA,GACR,gBAACzB,EAAD,CACE4B,wBAAyB,CACvBC,OAAQF","sources":["webpack://jsconfjp-2021/./src/components/Breadcrumb.tsx","webpack://jsconfjp-2021/./src/components/ResponsiveBox.tsx","webpack://jsconfjp-2021/./src/components/Title.tsx","webpack://jsconfjp-2021/./src/templates/markdown.tsx"],"sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport { useTranslation } from \"react-i18next\"\nimport { Link } from \"gatsby\"\n\nexport type Props = {\n  path: (string | { label: string; to: string })[]\n}\n\nconst Box = styled.div`\n  display: flex;\n`\nconst Text = styled.span`\n  margin-right: 0.5em;\n  font-size: 1.4rem;\n  font-weight: bold;\n  text-transform: uppercase;\n  font-family: ${({ theme }) => theme.fonts.header};\n  text-transform: uppercase;\n`\n\nexport function Breadcrumb(props: Props) {\n  const { path } = props\n  const { t } = useTranslation()\n\n  return (\n    <Box>\n      <Link to=\"/\">\n        <Text>{t(\"top\")}</Text>\n      </Link>\n      {path.filter(Boolean).map(label => {\n        const path = typeof label === \"string\" ? { label, to: null } : label\n        return (\n          <React.Fragment key={path.label}>\n            <Text>&gt;</Text>\n            {path.to ? (\n              <Link to={path.to}>\n                <Text>{path.label}</Text>\n              </Link>\n            ) : (\n              <Text>{path.label}</Text>\n            )}\n          </React.Fragment>\n        )\n      })}\n    </Box>\n  )\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nexport type Props = {\n  children: React.ReactNode\n}\n\nconst Box = styled.div`\n  width: 100%;\n  max-width: ${({ theme }) => theme.innerWidth};\n  padding: 2em 1em 5em;\n  margin: 0 auto;\n  box-sizing: border-box;\n`\n\nexport function ResponsiveBox(props: Props) {\n  const { children } = props\n\n  return <Box>{children}</Box>\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nexport type Props = {\n  children: React.ReactNode\n}\n\nconst Box = styled.h1`\n  text-align: center;\n  margin: 40px 0 60px;\n  font-size: 4rem;\n  text-transform: none;\n  font-family: ${({ theme }) => theme.fonts.header};\n`\n\nexport function Title(props: Props) {\n  const { children } = props\n\n  return <Box>{children}</Box>\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nimport { Layout } from \"../components/Layout\"\nimport { SEO } from \"../components/Seo\"\nimport { Title } from \"../components/Title\"\nimport { ResponsiveBox } from \"../components/ResponsiveBox\"\nimport { Breadcrumb } from \"../components/Breadcrumb\"\n\ntype Props = {\n  pageContext: {\n    post: {\n      fields: {\n        slug: string\n      }\n      frontmatter: {\n        title: string\n      }\n      html: string\n    }\n  }\n}\n\nconst Box = styled.div`\n  font-family: ${({ theme }) => theme.fonts.header};\n`\n\nexport default function Markdown(props: Props) {\n  const {\n    pageContext: { post }\n  } = props\n  const {\n    frontmatter: { title },\n    html\n  } = post\n\n  return (\n    <Layout>\n      <SEO title={title} />\n      <ResponsiveBox>\n        <Breadcrumb path={[title]} />\n        <Title>{title}</Title>\n        <Box\n          dangerouslySetInnerHTML={{\n            __html: html\n          }}\n        />\n      </ResponsiveBox>\n    </Layout>\n  )\n}\n"],"names":["Box","styled","Text","theme","fonts","header","Breadcrumb","props","path","t","useTranslation","Link","to","filter","Boolean","map","label","key","innerWidth","ResponsiveBox","children","Title","Markdown","post","pageContext","title","frontmatter","html","dangerouslySetInnerHTML","__html"],"sourceRoot":""}