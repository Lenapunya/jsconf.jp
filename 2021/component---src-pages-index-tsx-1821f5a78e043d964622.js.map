{"version":3,"sources":["webpack://jsconfjp-2021/./src/components/Speaker.tsx","webpack://jsconfjp-2021/./src/components/SpeakerList.tsx","webpack://jsconfjp-2021/./src/components/SubTitle.tsx","webpack://jsconfjp-2021/./src/components/Hero.tsx","webpack://jsconfjp-2021/./src/components/Card.tsx","webpack://jsconfjp-2021/./src/components/Centerize.tsx","webpack://jsconfjp-2021/./src/images/bg.png","webpack://jsconfjp-2021/./src/pages/index.tsx","webpack://jsconfjp-2021/./src/images/bg-flip-x.png","webpack://jsconfjp-2021/./src/util/languages.ts"],"names":["LinkContainer","styled","Link","theme","colors","text","Avatar","Image","Title","border","fonts","Name","Speaker","props","i18n","useTranslation","talk","speaker","avatar","uuid","title","titleJa","name","to","image","alt","loading","enOrJa","lang","Container","breakpoints","mobile","SpeakerList","speakers","avatars","talkMap","talks","reduce","acc","String","avatarMap","filter","presentations","length","map","key","SubTitle","header","Box","TextBox","Paragraph","Hero","subTitle","description","Logo","size","Card","shadow","base","Centerize","width","WavyBox","bg","_Card","OrganizersBox","MembersBox","baseDimmed","IndexPage","t","useStaticQuery","site","allSpeakersYaml","allSponsorsYaml","allMembersYaml","allFile","allTalksYaml","guestSpeakers","edges","node","nodes","childImageSharp","gatsbyImageData","jnaMembers","isJNA","notJnaMembers","Layout","language","LinkButton","color","disabled","siteMetadata","cfpFormUrl","sponsorFormUrl","member","href","url","target","rel","src","enStr","jaStr","test"],"mappings":"gNA2CMA,GAAgBC,QAAOC,QAAV,4EAAGD,CAAH,qCAER,qBAAGE,MAAkBC,OAAOC,QAEjCC,GAASL,QAAOM,KAAV,qEAAGN,CAAH,iCAINO,EAAQP,mBAAH,yDAAGA,CAAH,kIAGkB,qBAAGE,MAAkBC,OAAOK,UAExC,qBAAGN,MAAkBO,MAAML,QAItCM,EAAOV,kBAAH,wDAAGA,CAAH,yEAGO,qBAAGE,MAAkBO,MAAML,QAIrC,SAASO,EAAQC,GACtB,IAAQC,GAASC,SAATD,KACAE,EAA0BH,EAA1BG,KAAMC,EAAoBJ,EAApBI,QAASC,EAAWL,EAAXK,OACfC,EAAyBH,EAAzBG,KAAMC,EAAmBJ,EAAnBI,MAAOC,EAAYL,EAAZK,QACbC,EAASL,EAATK,KAER,OAAKH,GAAkB,QAAVC,EAWX,gBAACpB,EAAD,CAAeuB,GAAE,QAAUJ,GACzB,gBAACb,EAAD,CAAQkB,MAAON,EAAQO,IAAKH,EAAMI,QAAQ,SAC1C,gBAAClB,EAAD,MAAQmB,OAAOb,EAAPa,CAAaP,EAAOC,IAC5B,gBAACV,EAAD,KAAOW,IAZP,2BACE,gBAAChB,EAAD,CAAQkB,MAAON,EAAQO,IAAKH,EAAMI,QAAQ,SAC1C,gBAAClB,EAAD,CAAOoB,KAAK,OAAMD,OAAOb,EAAPa,CAAaP,EAAOC,IACtC,gBAACV,EAAD,KAAOW,ICpEf,IAAMO,EAAY5B,oBAAH,iEAAGA,CAAH,8KAMX,qBAAGE,MAAkB2B,YAAYC,UAO9B,SAASC,EAAYnB,GAC1B,IAAQoB,EAA6BpB,EAA7BoB,SAAUC,EAAmBrB,EAAnBqB,QACZC,EAD+BtB,EAAVuB,MACLC,QAAO,SAACC,EAAKtB,GAEjC,OADAsB,EAAIC,OAAOvB,EAAKG,OAASH,EAClBsB,IACN,IACGE,EAA4CN,EAAQG,QACxD,SAACC,EAAKpB,GAAN,8BAAuBoB,IAAvB,MAA6BpB,EAAOC,MAAOD,EAA3C,MACA,IAGF,OACE,gBAACW,EAAD,KACGI,EACEQ,QAAO,SAAAxB,GACN,OAAOA,EAAQyB,cAAcC,OAAS,KAEvCC,KAAI,SAAA3B,GACH,OACE,gBAACL,EAAD,CACEiC,IAAK5B,EAAQK,KACbL,QAASA,EACTD,KAAMmB,EAAQlB,EAAQyB,cAAc,IACpCxB,OAAQsB,EAAUvB,EAAQE,c,qEC5C3B2B,E,KAAW7C,iBAAH,oDAAGA,CAAH,+FAGJ,qBAAGE,MAAkBO,MAAMqC,W,sJCKtCC,EAAM/C,oBAAH,oDAAGA,CAAH,2JAQL,qBAAGE,MAAkB2B,YAAYC,UAM/BkB,EAAUhD,oBAAH,wDAAGA,CAAH,4CAIT,qBAAGE,MAAkB2B,YAAYC,UAI/BvB,EAAQP,mBAAH,sDAAGA,CAAH,8CAEM,qBAAGE,MAAkBO,MAAMqC,UAGtCD,EAAW7C,mBAAH,yDAAGA,CAAH,gDAEG,qBAAGE,MAAkBO,MAAMqC,UAGtCG,EAAYjD,kBAAH,0DAAGA,CAAH,qDAEE,qBAAGE,MAAkBO,MAAML,QAIrC,SAAS8C,EAAKtC,GACnB,IAAQO,EAAiCP,EAAjCO,MAAOgC,EAA0BvC,EAA1BuC,SAAUC,EAAgBxC,EAAhBwC,YAEzB,OACE,gBAACL,EAAD,KACE,gBAACM,EAAA,EAAD,CAAMC,KAAM,IAAK9B,IAAI,mBACrB,gBAACwB,EAAD,KACE,gBAACzC,EAAD,CAAOoB,KAAK,MAAMR,GAClB,gBAAC0B,EAAD,KAAWM,GACX,gBAACF,EAAD,CAAWtB,KAAK,MAAMyB,K,iCCvDjBG,EAAOvD,oBAAH,gDAAGA,CAAH,uDACY,qBAAGE,MAAkBC,OAAOqD,UACnC,qBAAGtD,MAAkBC,OAAOsD,QCFrCC,EAAY1D,oBAAH,oDAAGA,CAAH,0HAOP,qBAAGE,MAAkByD,SCTpC,EAAe,IAA0B,iDCkBnCC,GClBS,IDkBC5D,oBAAH,0DAAGA,CAAH,2JAGc6D,IASrBjC,EAAY5B,oBAAH,4DAAGA,CAAH,oBAGTuD,GAAOvD,QAAO8D,GAAV,kEAAG9D,CAAH,oFAKN,qBAAGE,MAAkB2B,YAAYC,UAK/BiC,EAAgB/D,oBAAH,gEAAGA,CAAH,2TAOF,qBAAGE,MAAkBO,MAAML,QAIxC,qBAAGF,MAAkB2B,YAAYC,UAM/BkC,GAAahE,QAAO+D,GAAV,wEAAG/D,CAAH,2HAGZ,qBAAGE,MAAkB2B,YAAYC,UAKhB9B,oBAAH,+DAAGA,CAAH,4GAMd,qBAAGE,MAAkB2B,YAAYC,UAKlB9B,oBAAH,6DAAGA,CAAH,2DAGM,qBAAGE,MAAkBC,OAAO8D,cAGnC,SAASC,IACtB,OAAoBpD,SAAZqD,EAAR,EAAQA,EAAGtD,EAAX,EAAWA,KACX,GAOIuD,oBAAe,cANjBC,EADF,EACEA,KACAC,EAFF,EAEEA,gBACAC,EAHF,EAGEA,gBACAC,EAJF,EAIEA,eACAC,EALF,EAKEA,QACAC,EANF,EAMEA,aAsEIC,EAAgBL,EAAgBM,MAAMjC,KAAI,qBAAGkC,QAG7C1C,GADWoC,EAAgBK,MAAMjC,KAAI,qBAAGkC,QAChCH,EAAaE,MAAMjC,KAAI,qBAAGkC,SAClC5C,EAAUwC,EAAQK,MACrBtC,QAAO,SAACvB,GAAD,OAAiBA,EAAO8D,mBAC/BpC,KAAI,SAAC1B,GAAD,sBACHC,KAAMD,EAAOI,MACVJ,EAAO8D,gBAAgBC,oBAExBC,EAAaT,EAAeI,MAAMpC,QAAO,qBAAGqC,KAAqBK,SACjEC,EAAgBX,EAAeI,MAAMpC,QACzC,qBAAGqC,KAAsBK,SAG3B,OACE,gBAACE,EAAA,EAAD,KACE,gBAACxB,EAAD,KACE,gBAAC,IAAD,CAAKjC,KAAMd,EAAKwE,WAChB,gBAACzD,EAAD,KACE,gBAAC8B,EAAD,KACE,gBAACR,EAAD,CACE/B,MAAOgD,EAAE,YACThB,SAAUgB,EAAE,kBACZf,YAAae,EAAE,kBAInB,gBAAC,EAAD,KACE,gBAAC,IAAD,KAAWA,EAAE,kBACb,gBAACpC,EAAA,EAAD,CACEC,SAAU2C,EACV1C,QAASA,EACTE,MAAOA,IAERwC,EAAcjC,OAAS,EACtB,gBAACgB,EAAD,KACE,gBAAC4B,EAAA,EAAD,CAAYC,MAAM,UAAUjE,GAAG,cAC5B6C,EAAE,gBAIP,gBAACT,EAAD,KACE,gBAAC4B,EAAA,EAAD,CAAYhC,KAAK,QAAQkC,UAAQ,EAAClE,GAAI,IACnC6C,EAAE,iBAiBX,gBAACT,EAAD,KACE,gBAAC,IAAD,KAAWS,EAAE,oBACb,gBAACT,EAAD,KACGW,EAAKoB,aAAaC,WACjB,gBAACJ,EAAA,EAAD,CACEC,MAAM,UACNjC,KAAK,QACLhC,GAAI+C,EAAKoB,aAAaC,YAErBvB,EAAE,eAGL,gBAACmB,EAAA,EAAD,CAAYhC,KAAK,QAAQkC,UAAQ,EAAClE,GAAI,IACnC6C,EAAE,iBAMX,gBAAC,EAAD,KACE,gBAAC,IAAD,KAAWA,EAAE,oBACb,gBAACT,EAAD,KACGW,EAAKoB,aAAaE,eACjB,gBAACL,EAAA,EAAD,CACEC,MAAM,UACNjC,KAAK,QACLhC,GAAI+C,EAAKoB,aAAaE,gBAErBxB,EAAE,mBAGL,gBAACmB,EAAA,EAAD,CAAYhC,KAAK,QAAQkC,UAAQ,EAAClE,GAAI,IACnC6C,EAAE,iBAMX,gBAACT,EAAD,KACGuB,EAAWvC,OAAS,EACnB,gCACE,gBAAC,IAAD,KAAWyB,EAAE,mBACb,gBAACJ,EAAD,KACGkB,EAAWtC,KAAI,gBAASiD,EAAT,EAAGf,KAAH,OACd,2BACE,qBAAGgB,KAAMD,EAAOE,IAAKC,OAAO,SAASC,IAAI,YACvC,uBACErC,MAAM,OACNlC,QAAQ,OACRwE,IAAQL,EAAO3E,OAAZ,cAEL,4BAAO2E,EAAOvE,aAMtB,KACH8D,EAAczC,OAAS,EACtB,gCACE,gBAAC,IAAD,KAAWyB,EAAE,kBACb,gBAACH,EAAD,KACGmB,EAAcxC,KAAI,gBAASiD,EAAT,EAAGf,KAAH,OACjB,2BACE,qBAAGgB,KAAMD,EAAOE,IAAKC,OAAO,SAASC,IAAI,YACvC,uBACErC,MAAM,OACNlC,QAAQ,OACRwE,IAAQL,EAAO3E,OAAZ,cAEL,4BAAO2E,EAAOvE,aAMtB,KACJ,gBAACqC,EAAD,KACE,gBAAC4B,EAAA,EAAD,CAAYC,MAAM,YAAYjE,GAAG,sBAC9B6C,EAAE,kB,kCE7SZ,SAASzC,EAAOb,GACrB,OAAO,SAACqF,EAAeC,GAAhB,OAIkBxE,EAHZd,EAAKwE,SAIX,WAAWe,KAAKzE,IAJQwE,EAAQA,EAAQD,GAASC,EAGnD,IAAoBxE,G","file":"component---src-pages-index-tsx-1821f5a78e043d964622.js","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport { Link } from \"gatsby\"\nimport { useTranslation } from \"react-i18next\"\nimport { GatsbyImage as Image, IGatsbyImageData } from \"gatsby-plugin-image\"\nimport { enOrJa } from \"../util/languages\"\n\nexport type TalkType = {\n  uuid: string\n  title: string\n  titleJa: string\n  description: string\n  descriptionJa: string\n  spokenLanguage: string\n  slideLanguage: string\n  speakerIDs: string[]\n  date: \"day1\"\n  startsAt: string\n  endsAt: string\n  hiddenTimeBoxes: string[] | null\n  room: \"A\" | \"B\"\n}\n\nexport type SpeakerType = {\n  uuid: string\n  name: string\n  biography: string\n  biographyJa: string\n  presentations: string[]\n  github: string\n  twitter: string\n}\n\nexport type AvatarType = {\n  uuid: string\n} & IGatsbyImageData\n\nexport type Props = {\n  speaker: SpeakerType\n  avatar: AvatarType\n  talk: TalkType\n}\n\nconst LinkContainer = styled(Link)`\n  text-decoration: none;\n  color: ${({ theme }) => theme.colors.text};\n`\nconst Avatar = styled(Image)`\n  width: 100%;\n  max-width: 273px;\n`\nconst Title = styled.h2`\n  margin: 0;\n  padding: 10px;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.border};\n  text-align: center;\n  font-family: ${({ theme }) => theme.fonts.text};\n  font-size: 2rem;\n  overflow-wrap: break-word;\n`\nconst Name = styled.p`\n  margin-bottom: 0;\n  text-align: center;\n  font-family: ${({ theme }) => theme.fonts.text};\n  font-size: 1.6rem;\n`\n\nexport function Speaker(props: Props) {\n  const { i18n } = useTranslation()\n  const { talk, speaker, avatar } = props\n  const { uuid, title, titleJa } = talk\n  const { name } = speaker\n\n  if (!uuid || title === \"TBA\") {\n    return (\n      <div>\n        <Avatar image={avatar} alt={name} loading=\"lazy\" />\n        <Title lang=\"en\">{enOrJa(i18n)(title, titleJa)}</Title>\n        <Name>{name}</Name>\n      </div>\n    )\n  }\n\n  return (\n    <LinkContainer to={`talk/${uuid}`}>\n      <Avatar image={avatar} alt={name} loading=\"lazy\" />\n      <Title>{enOrJa(i18n)(title, titleJa)}</Title>\n      <Name>{name}</Name>\n    </LinkContainer>\n  )\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { Speaker, SpeakerType, TalkType, AvatarType } from \"./Speaker\"\n\nexport type Props = {\n  speakers: SpeakerType[]\n  avatars: AvatarType[]\n  talks: TalkType[]\n}\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-column-gap: 60px;\n  grid-row-gap: 60px;\n\n  ${({ theme }) => theme.breakpoints.mobile} {\n    grid-template-columns: repeat(2, 1fr);\n    grid-column-gap: 20px;\n    grid-row-gap: 20px;\n  }\n`\n\nexport function SpeakerList(props: Props) {\n  const { speakers, avatars, talks } = props\n  const talkMap = talks.reduce((acc, talk) => {\n    acc[String(talk.uuid)] = talk as TalkType\n    return acc\n  }, {} as { [uuid: string]: TalkType })\n  const avatarMap: { [uuid: string]: AvatarType } = avatars.reduce(\n    (acc, avatar) => ({ ...acc, [avatar.uuid]: avatar }),\n    {}\n  )\n\n  return (\n    <Container>\n      {speakers\n        .filter(speaker => {\n          return speaker.presentations.length > 0\n        })\n        .map(speaker => {\n          return (\n            <Speaker\n              key={speaker.name}\n              speaker={speaker}\n              talk={talkMap[speaker.presentations[0]]}\n              avatar={avatarMap[speaker.uuid]}\n            />\n          )\n        })}\n    </Container>\n  )\n}\n","import styled from \"styled-components\"\n\nexport const SubTitle = styled.h2`\n  text-align: center;\n  text-transform: uppercase;\n  font-family: ${({ theme }) => theme.fonts.header};\n  font-size: 4rem;\n  margin: 0 0 1em;\n`\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { Logo } from \"./Logo\"\n\ntype Props = {\n  title: string\n  subTitle: string\n  description: string\n}\n\nconst Box = styled.div`\n  display: flex;\n  margin-top: 120px;\n  margin-bottom: 20px;\n  width: 100%;\n  max-width: 910px;\n  align-items: center;\n\n  ${({ theme }) => theme.breakpoints.mobile} {\n    margin-top: 60px;\n    flex-direction: column;\n    width: 100%;\n  }\n`\nconst TextBox = styled.div`\n  flex: 1;\n  margin-left: 60px;\n\n  ${({ theme }) => theme.breakpoints.mobile} {\n    margin: 0;\n  }\n`\nconst Title = styled.h1`\n  margin: 0;\n  font-family: ${({ theme }) => theme.fonts.header};\n  font-size: 6rem;\n`\nconst SubTitle = styled.h2`\n  margin: 0;\n  font-family: ${({ theme }) => theme.fonts.header};\n  font-size: 2.4rem;\n`\nconst Paragraph = styled.p`\n  margin: 28px 0 0;\n  font-family: ${({ theme }) => theme.fonts.text};\n  font-size: 2rem;\n`\n\nexport function Hero(props: Props) {\n  const { title, subTitle, description } = props\n\n  return (\n    <Box>\n      <Logo size={270} alt=\"JSConf JP Logo\" />\n      <TextBox>\n        <Title lang=\"en\">{title}</Title>\n        <SubTitle>{subTitle}</SubTitle>\n        <Paragraph lang=\"en\">{description}</Paragraph>\n      </TextBox>\n    </Box>\n  )\n}\n","import styled from \"styled-components\"\n\nexport const Card = styled.div`\n  box-shadow: 0px 3px 10px ${({ theme }) => theme.colors.shadow};\n  background-color: ${({ theme }) => theme.colors.base};\n`\n","import styled from \"styled-components\"\n\nexport const Centerize = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin: 0 auto;\n  width: 100%;\n  max-width: ${({ theme }) => theme.width};\n`\n","export default __webpack_public_path__ + \"static/bg-79a8b95d2e5a1a862e97e45a70c765f1.png\";","import React from \"react\"\nimport styled from \"styled-components\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { useTranslation } from \"react-i18next\"\n\nimport { Layout } from \"../components/Layout\"\nimport { SEO } from \"../components/Seo\"\nimport { Hero } from \"../components/Hero\"\nimport { SubTitle } from \"../components/SubTitle\"\nimport { SpeakerList } from \"../components/SpeakerList\"\n// @ts-expect-error To be updated\nimport { SponsorList } from \"../components/SponsorList\"\nimport { LinkButton } from \"../components/LinkButton\"\nimport { Card as _Card } from \"../components/Card\"\nimport { Centerize } from \"../components/Centerize\"\nimport bg from \"../images/bg.png\"\nimport bgFlipX from \"../images/bg-flip-x.png\"\n\nconst WavyBox = styled.div`\n  margin: 0;\n  padding-bottom: 80px;\n  background-image: url(\"${bg}\");\n  background-repeat: no-repeat;\n  background-position: top -830px right -300px;\n  background-size: 100%;\n  // background-image: url(\"${bg}\"), url(\"${bgFlipX}\");\n  // background-repeat: no-repeat, no-repeat;\n  // background-position: top -830px right -300px, center left -450px;\n  // background-size: 100%, 120%;\n`\nconst Container = styled.div`\n  padding: 0 1em;\n`\nconst Card = styled(_Card)`\n  max-width: 1080px;\n  margin: 80px auto;\n  padding: 70px;\n\n  ${({ theme }) => theme.breakpoints.mobile} {\n    margin: 80px 0;\n    padding: 1em;\n  }\n`\nconst OrganizersBox = styled.div`\n  display: grid;\n  margin-bottom: 1em;\n  grid-template-columns: repeat(auto-fit, minmax(1em, max-content));\n  grid-column-gap: 60px;\n  grid-row-gap: 60px;\n  text-align: center;\n  font-family: ${({ theme }) => theme.fonts.text};\n  font-size: 1.6rem;\n  overflow-wrap: break-word;\n\n  ${({ theme }) => theme.breakpoints.mobile} {\n    grid-template-columns: repeat(3, minmax(1em, max-content));\n    grid-column-gap: 20px;\n    grid-row-gap: 20px;\n  }\n`\nconst MembersBox = styled(OrganizersBox)`\n  grid-template-columns: repeat(6, minmax(1em, max-content));\n\n  ${({ theme }) => theme.breakpoints.mobile} {\n    grid-template-columns: repeat(4, minmax(1em, max-content));\n  }\n`\n// @ts-expect-error To be updated\nconst SchedulesBox = styled.div`\n  display: flex;\n  justify-content: center;\n  width: calc(100% - 3em);\n  max-width: 910px;\n\n  ${({ theme }) => theme.breakpoints.mobile} {\n    flex-direction: column;\n  }\n`\n// @ts-expect-error To be updated\nconst SponsorBox = styled.div`\n  margin-top: 80px;\n  padding: 100px 0;\n  background-color: ${({ theme }) => theme.colors.baseDimmed};\n`\n\nexport default function IndexPage() {\n  const { t, i18n } = useTranslation()\n  const {\n    site,\n    allSpeakersYaml,\n    allSponsorsYaml,\n    allMembersYaml,\n    allFile,\n    allTalksYaml\n  } = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          ticketUrl\n          sponsorFormUrl\n          cfpFormUrl\n        }\n      }\n      allSponsorsYaml {\n        edges {\n          node {\n            name\n            grade\n            url\n            logoUrl\n          }\n        }\n      }\n      allSpeakersYaml(filter: { featured: { eq: true } }) {\n        edges {\n          node {\n            uuid\n            name\n            biography\n            biographyJa\n            presentations\n          }\n        }\n      }\n      allTalksYaml {\n        edges {\n          node {\n            uuid\n            title\n            titleJa\n            description\n            descriptionJa\n            spokenLanguage\n            slideLanguage\n            speakerIDs\n          }\n        }\n      }\n      allMembersYaml {\n        edges {\n          node {\n            name\n            url\n            avatar\n            isJNA\n          }\n        }\n      }\n      allFile(filter: { relativePath: { regex: \"/speakers/\" } }) {\n        nodes {\n          name\n          childImageSharp {\n            gatsbyImageData(\n              width: 262\n              height: 262\n              placeholder: BLURRED\n              layout: CONSTRAINED\n            )\n          }\n        }\n      }\n    }\n  `)\n  const guestSpeakers = allSpeakersYaml.edges.map(({ node }: any) => node)\n  // @ts-expect-error To be updated\n  const sponsors = allSponsorsYaml.edges.map(({ node }: any) => node)\n  const talks = allTalksYaml.edges.map(({ node }: any) => node)\n  const avatars = allFile.nodes\n    .filter((avatar: any) => avatar.childImageSharp)\n    .map((avatar: any) => ({\n      uuid: avatar.name,\n      ...avatar.childImageSharp.gatsbyImageData\n    }))\n  const jnaMembers = allMembersYaml.edges.filter(({ node }: any) => node.isJNA)\n  const notJnaMembers = allMembersYaml.edges.filter(\n    ({ node }: any) => !node.isJNA\n  )\n\n  return (\n    <Layout>\n      <WavyBox>\n        <SEO lang={i18n.language as Languages} />\n        <Container>\n          <Centerize>\n            <Hero\n              title={t(\"siteName\")}\n              subTitle={t(\"festivalPeriod\")}\n              description={t(\"description\")}\n            />\n          </Centerize>\n\n          <Card>\n            <SubTitle>{t(\"guestSpeakers\")}</SubTitle>\n            <SpeakerList\n              speakers={guestSpeakers}\n              avatars={avatars}\n              talks={talks}\n            />\n            {guestSpeakers.length > 0 ? (\n              <Centerize>\n                <LinkButton color=\"primary\" to=\"/speakers/\">\n                  {t(\"goToGuests\")}\n                </LinkButton>\n              </Centerize>\n            ) : (\n              <Centerize>\n                <LinkButton size=\"large\" disabled to={\"\"}>\n                  {t(\"comingSoon\")}\n                </LinkButton>\n              </Centerize>\n            )}\n          </Card>\n\n          {/* TODO: To be updated */}\n          {/* <Centerize>\n            <SubTitle>{t(\"schedule\")}</SubTitle>\n            <SchedulesBox>\n              <p>{t('TBA')}</p>\n              <LinkButton color=\"secondary\" size=\"large\" to=\"/schedule\">\n                {t(\"day1\")} ({dateTimeFormatter.format(times.day1.startsAt)})\n              </LinkButton>\n            </SchedulesBox>\n          </Centerize> */}\n\n          <Centerize>\n            <SubTitle>{t(\"callForSpeakers\")}</SubTitle>\n            <Centerize>\n              {site.siteMetadata.cfpFormUrl ? (\n                <LinkButton\n                  color=\"primary\"\n                  size=\"large\"\n                  to={site.siteMetadata.cfpFormUrl}\n                >\n                  {t(\"submitTalk\")}\n                </LinkButton>\n              ) : (\n                <LinkButton size=\"large\" disabled to={\"\"}>\n                  {t(\"comingSoon\")}\n                </LinkButton>\n              )}\n            </Centerize>\n          </Centerize>\n\n          <Card>\n            <SubTitle>{t(\"callForSponsors\")}</SubTitle>\n            <Centerize>\n              {site.siteMetadata.sponsorFormUrl ? (\n                <LinkButton\n                  color=\"primary\"\n                  size=\"large\"\n                  to={site.siteMetadata.sponsorFormUrl}\n                >\n                  {t(\"becomeASponsor\")}\n                </LinkButton>\n              ) : (\n                <LinkButton size=\"large\" disabled to={\"\"}>\n                  {t(\"comingSoon\")}\n                </LinkButton>\n              )}\n            </Centerize>\n          </Card>\n\n          <Centerize>\n            {jnaMembers.length > 0 ? (\n              <>\n                <SubTitle>{t(\"organizingTeam\")}</SubTitle>\n                <OrganizersBox>\n                  {jnaMembers.map(({ node: member }: { node: any }) => (\n                    <div>\n                      <a href={member.url} target=\"_blank\" rel=\"noopener\">\n                        <img\n                          width=\"100%\"\n                          loading=\"lazy\"\n                          src={`${member.avatar}?size=160`}\n                        />\n                        <span>{member.name}</span>\n                      </a>\n                    </div>\n                  ))}\n                </OrganizersBox>\n              </>\n            ) : null}\n            {notJnaMembers.length > 0 ? (\n              <>\n                <SubTitle>{t(\"volunteerTeam\")}</SubTitle>\n                <MembersBox>\n                  {notJnaMembers.map(({ node: member }: { node: any }) => (\n                    <div>\n                      <a href={member.url} target=\"_blank\" rel=\"noopener\">\n                        <img\n                          width=\"100%\"\n                          loading=\"lazy\"\n                          src={`${member.avatar}?size=160`}\n                        />\n                        <span>{member.name}</span>\n                      </a>\n                    </div>\n                  ))}\n                </MembersBox>\n              </>\n            ) : null}\n            <Centerize>\n              <LinkButton color=\"secondary\" to=\"https://nodejs.jp/\">\n                {t(\"joinUs\")}\n              </LinkButton>\n            </Centerize>\n          </Centerize>\n        </Container>\n\n        {/* TODO: To be updated */}\n        {/* <SponsorBox>\n          <Centerize>\n            <Container>\n              <SubTitle>{t(\"sponsors\")}</SubTitle>\n              <SponsorList sponsors={sponsors} />\n            </Container>\n          </Centerize>\n        </SponsorBox> */}\n      </WavyBox>\n    </Layout>\n  )\n}\n","export default __webpack_public_path__ + \"static/bg-flip-x-2f3a7c495062c17f09474ebd78fbf078.png\";","import { i18n } from \"i18next\"\n\nexport function enOrJa(i18n: i18n) {\n  return (enStr: string, jaStr: string) =>\n    isJapanese(i18n.language) && jaStr ? jaStr : enStr || jaStr\n}\n\nexport function isJapanese(lang: string) {\n  return /ja(-\\w)*/.test(lang)\n}\n"],"sourceRoot":""}