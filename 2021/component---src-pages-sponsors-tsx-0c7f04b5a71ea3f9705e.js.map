{"version":3,"file":"component---src-pages-sponsors-tsx-0c7f04b5a71ea3f9705e.js","mappings":"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","sources":["webpack://jsconfjp-2021/./src/components/Breadcrumb.tsx","webpack://jsconfjp-2021/./src/components/ResponsiveBox.tsx","webpack://jsconfjp-2021/./src/components/Sponsor.tsx","webpack://jsconfjp-2021/./src/components/SponsorList.tsx","webpack://jsconfjp-2021/./src/components/Title.tsx","webpack://jsconfjp-2021/./src/pages/sponsors.tsx"],"sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport { useTranslation } from \"react-i18next\"\nimport { Link } from \"gatsby\"\n\nexport type Props = {\n  path: (string | { label: string; to: string })[]\n}\n\nconst Box = styled.div`\n  display: flex;\n`\nconst Text = styled.span`\n  margin-right: 0.5em;\n  font-size: 1.4rem;\n  font-weight: bold;\n  text-transform: uppercase;\n  font-family: ${({ theme }) => theme.fonts.header};\n  text-transform: uppercase;\n`\n\nexport function Breadcrumb(props: Props) {\n  const { path } = props\n  const { t } = useTranslation()\n\n  return (\n    <Box>\n      <Link to=\"/\">\n        <Text>{t(\"top\")}</Text>\n      </Link>\n      {path.filter(Boolean).map(label => {\n        const path = typeof label === \"string\" ? { label, to: null } : label\n        return (\n          <React.Fragment key={path.label}>\n            <Text>&gt;</Text>\n            {path.to ? (\n              <Link to={path.to}>\n                <Text>{path.label}</Text>\n              </Link>\n            ) : (\n              <Text>{path.label}</Text>\n            )}\n          </React.Fragment>\n        )\n      })}\n    </Box>\n  )\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nexport type Props = {\n  children: React.ReactNode\n}\n\nconst Box = styled.div`\n  width: 100%;\n  max-width: ${({ theme }) => theme.innerWidth};\n  padding: 2em 1em 5em;\n  margin: 0 auto;\n  box-sizing: border-box;\n`\n\nexport function ResponsiveBox(props: Props) {\n  const { children } = props\n\n  return <Box>{children}</Box>\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { OutboundLink } from \"gatsby-plugin-google-analytics\"\n\nconst Link = styled(OutboundLink)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  border: 1px solid ${({ theme }) => theme.colors.border};\n  background-color: ${({ theme }) => theme.colors.base};\n  font-size: 0;\n`\nconst Text = styled.p`\n  font-family: ${({ theme }) => theme.fonts.text};\n  font-size: 1.4rem;\n`\nconst Img = styled.img`\n  padding: 20px;\n  object-fit: contain;\n  box-sizing: border-box;\n  width: 100%;\n\n  &.premium {\n    width: 780px;\n    height: 200px;\n\n    ${({ theme }) => theme.breakpoints.mobile} {\n      width: 100%;\n      max-width: 780px;\n      max-height: 160px;\n    }\n  }\n  &.sponsor {\n    width: 100%;\n    height: 125px;\n    max-width: 440px;\n  }\n\n  ${({ theme }) => theme.breakpoints.mobile} {\n    padding: 10px;\n\n    &.sponsor {\n      width: 100%;\n      max-height: 64px;\n    }\n  }\n`\n\nexport type Props = {\n  grade: \"premium\" | \"sponsor\"\n  logoUrl: string\n  name: string\n  url: string\n  prText: string\n  showPrText: boolean\n}\n\nexport function Sponsor(props: Props) {\n  const { logoUrl, url, grade, name, prText, showPrText } = props\n\n  return (\n    <div>\n      <Link href={url} target=\"_blank\">\n        <Img\n          src={logoUrl}\n          width=\"100%\"\n          className={grade}\n          alt={name}\n          title={prText}\n        />\n      </Link>\n      {showPrText ? <Text>{prText}</Text> : null}\n    </div>\n  )\n}\n","import React from \"react\"\nimport styled, { css } from \"styled-components\"\nimport { useTranslation } from \"react-i18next\"\nimport { Sponsor, Props as SponsorType } from \"./Sponsor\"\n\nexport type Props = {\n  sponsors: SponsorType[]\n  showPrText: boolean\n}\n\nconst baseGridStyle = css`\n  grid-column-gap: 60px;\n  grid-row-gap: 30px;\n\n  ${({ theme }) => theme.breakpoints.mobile} {\n    grid-column-gap: 20px;\n    grid-row-gap: 20px;\n  }\n`\n\nconst LargeBox = styled.div`\n  display: grid;\n  grid-template-columns: repeat(1, 1fr);\n  width: 100%;\n  max-width: 780px;\n  margin: 0 auto;\n  ${baseGridStyle}\n`\nconst SmallBox = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  ${baseGridStyle}\n`\nconst SubTitle = styled.h3`\n  font-family: ${({ theme }) => theme.fonts.header};\n  text-align: center;\n  font-size: 3rem;\n`\n\nexport function SponsorList(props: Props) {\n  const { sponsors, showPrText } = props\n  const { t } = useTranslation()\n  const grades = sponsors.reduce(\n    (acc, sponsor) => ({\n      ...acc,\n      [sponsor.grade]: (acc[sponsor.grade] ?? []).concat([sponsor])\n    }),\n    {} as { [K in SponsorType[\"grade\"]]: SponsorType[] }\n  )\n\n  return (\n    <>\n      <SubTitle>{t(\"sponsor.premium\")}</SubTitle>\n      <LargeBox>\n        {grades.premium.map(platinumSponsor => (\n          <Sponsor\n            key={platinumSponsor.url}\n            {...platinumSponsor}\n            showPrText={showPrText}\n          />\n        ))}\n      </LargeBox>\n\n      <SubTitle>{t(\"sponsor.sponsor\")}</SubTitle>\n      <SmallBox>\n        {grades.sponsor.map(sponsor => (\n          <Sponsor key={sponsor.url} {...sponsor} showPrText={showPrText} />\n        ))}\n      </SmallBox>\n    </>\n  )\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nexport type Props = {\n  children: React.ReactNode\n}\n\nconst Box = styled.h1`\n  text-align: center;\n  margin: 40px 0 60px;\n  font-size: 4rem;\n  text-transform: none;\n  font-family: ${({ theme }) => theme.fonts.header};\n`\n\nexport function Title(props: Props) {\n  const { children } = props\n\n  return <Box>{children}</Box>\n}\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { useTranslation } from \"react-i18next\"\n\nimport { Layout } from \"../components/Layout\"\nimport { SEO } from \"../components/Seo\"\nimport { Title } from \"../components/Title\"\nimport { SponsorList } from \"../components/SponsorList\"\nimport { ResponsiveBox } from \"../components/ResponsiveBox\"\nimport { Breadcrumb } from \"../components/Breadcrumb\"\n\nexport default function SponsorsPage() {\n  const data = useStaticQuery(graphql`\n    query Sponsors {\n      allSponsorsYaml {\n        edges {\n          node {\n            name\n            grade\n            url\n            logoUrl\n            prText\n          }\n        }\n      }\n    }\n  `)\n  const sponsors = data.allSponsorsYaml.edges.map(({ node }: any) => node)\n  const { t } = useTranslation()\n\n  return (\n    <Layout>\n      <SEO title={t(\"sponsors\")} description={t(\"sponsors.description\")} />\n      <ResponsiveBox>\n        <Breadcrumb path={[t(\"sponsors\")]} />\n        <Title>{t(\"sponsors\")}</Title>\n        <SponsorList sponsors={sponsors} showPrText />\n      </ResponsiveBox>\n    </Layout>\n  )\n}\n"],"names":["Box","styled","Text","theme","fonts","header","Breadcrumb","props","path","t","useTranslation","Link","to","filter","Boolean","map","label","key","innerWidth","ResponsiveBox","children","OutboundLink","colors","border","base","text","Img","breakpoints","mobile","Sponsor","logoUrl","url","grade","name","prText","showPrText","href","target","src","width","className","alt","title","baseGridStyle","css","LargeBox","SmallBox","SubTitle","SponsorList","sponsors","grades","reduce","acc","sponsor","concat","premium","platinumSponsor","Title","SponsorsPage","useStaticQuery","allSponsorsYaml","edges","node","description"],"sourceRoot":""}