# 1
- uuid: tips-for-developing-a-blogging-platform
  date: day1
  startsAt: "10:30"
  endsAt: "11:00"
  room: A
  title: ブログ系プラットフォームを開発するときのTips
  titleJa: ブログ系プラットフォームを開発するときのTips
  description: >-
    (Untranslated)
    ブログ系の投稿プラットフォームを作るときに知っておきたい知識やテクニックを紹介します。
  descriptionJa: >-
    ブログ系の投稿プラットフォームを作るときに知っておきたい知識やテクニックを紹介します。
  spokenLanguage: ja
  slideLanguage: ja
  # sponsorIDs: [xxx]
  speakerIDs:
    - catnose

# 2
- uuid: flawless-flows-the-psychology-of-harmonious-teamwork
  date: day1
  startsAt: "11:00"
  endsAt: "11:30"
  room: A
  title: Flawless flows - the psychology of harmonious teamwork
  titleJa: Flawless flows - the psychology of harmonious teamwork
  description: >-
    Overview: We all want to be better developers. But it's not just about writing fantastic code. We can also improve by bringing the best of our skills to every moment of product development. It means being able to get the information we need to do our job from everyone involved in the process, even when it seems impossible. This presentation will explore how to pull the strings in the background so that in the end we actually DEVELOP the product.
  descriptionJa: >-
    (Untranslated)
    Overview: We all want to be better developers. But it's not just about writing fantastic code. We can also improve by bringing the best of our skills to every moment of product development. It means being able to get the information we need to do our job from everyone involved in the process, even when it seems impossible. This presentation will explore how to pull the strings in the background so that in the end we actually DEVELOP the product.

    Additional information:

    My earlier article serves as a basis of my talk: https://dev.to/heydorka/flawless-flows-the-psychology-of-harmonious-teamwork-1d3m

    Relevance: as far as I can see, product teams struggle with managing time, handling personal relationships and these factors have a strong effect on their daily routine. I didn't even mention the effects of remote work... So, what I want to point out is how an individual can contribute. The aim is to have a strong, independent but collaborative team. The members can rely on the others' expertise and transparency. My talk helps those who're working in a toxic or mismanaged environment, but want to do something to change it.
  spokenLanguage: en
  slideLanguage: en
  # sponsorIDs: [xxx]
  speakerIDs:
    - dora

# 3
- uuid: organizational-development-streamlined-by-the-front-end-ecosystem
  date: day1
  startsAt: "11:00"
  endsAt: "11:30"
  room: B
  title: フロントエンドエコシステムで効率化する組織開発
  titleJa: フロントエンドエコシステムで効率化する組織開発
  description: >-
    (Untranslated)
    DMMプラットフォーム事業本部では、多くの事業・アプリケーションが効率的かつ独立して開発できることをめざし、昨年からフロントエンドのエコシステム開発に取り組んでいます。発表では、DMM PFで取り組んだフロントエンドのエコシステム開発についてお話できればと思います。モノレポファーストを念頭に、効率的かつ自律性を損なわない組織開発について共有いたします。

    ーーーーーーーーーーーーーーーーーーーーーーーー
    モノレポによるエコシステムをベースとし、現時点で約10のアプリケーション(まだまだ増える予定です)を運用していて、下記の仕組みを提供しています。

    ・車輪の再発明を防ぐモノレポによるパッケージエコシステム
    ・一貫性のあるUIを提供するためのデザインシステム Turtle
    ・最適なキャッシュ戦略を提供する静的アセット配信基盤 Panda

    モノレポはエコシステムの提供を楽にできますが、スケーラビリティの面でいくつかのチャレンジがあると考えています。私たちの場合では以下に取り組んでいます。

    ・スケーラブルなCI/CD基盤
    ・Next.js, Reactをベースとたアプリケーションジェネレーター
    ・コードレビュー、ドキュメンテーションによる技術水準向上

    また、将来的な展望として、以下をロードマップとして見据えています。

    ・共通ヘッダー改修による全社レスポンシブ化
    ・フロントエンドのインフラ基盤
    ・マイクロフロントエンド基盤
  descriptionJa: >-
    DMMプラットフォーム事業本部では、多くの事業・アプリケーションが効率的かつ独立して開発できることをめざし、昨年からフロントエンドのエコシステム開発に取り組んでいます。発表では、DMM PFで取り組んだフロントエンドのエコシステム開発についてお話できればと思います。モノレポファーストを念頭に、効率的かつ自律性を損なわない組織開発について共有いたします。

    ーーーーーーーーーーーーーーーーーーーーーーーー
    モノレポによるエコシステムをベースとし、現時点で約10のアプリケーション(まだまだ増える予定です)を運用していて、下記の仕組みを提供しています。

    ・車輪の再発明を防ぐモノレポによるパッケージエコシステム
    ・一貫性のあるUIを提供するためのデザインシステム Turtle
    ・最適なキャッシュ戦略を提供する静的アセット配信基盤 Panda

    モノレポはエコシステムの提供を楽にできますが、スケーラビリティの面でいくつかのチャレンジがあると考えています。私たちの場合では以下に取り組んでいます。

    ・スケーラブルなCI/CD基盤
    ・Next.js, Reactをベースとたアプリケーションジェネレーター
    ・コードレビュー、ドキュメンテーションによる技術水準向上

    また、将来的な展望として、以下をロードマップとして見据えています。

    ・共通ヘッダー改修による全社レスポンシブ化
    ・フロントエンドのインフラ基盤
    ・マイクロフロントエンド基盤
  spokenLanguage: ja
  slideLanguage: ja
  # sponsorIDs: [xxx]
  speakerIDs:
    - okmttdhr

# 4
- uuid: optional-chaining-from-specification-to-implementation
  date: day1
  startsAt: "11:30"
  endsAt: "12:00"
  room: A
  title: "Optional Chaining: From Specification to Implementation"
  titleJa: "オプショナルチェーンができるまで　〜仕様と実装〜"
  description: >-
    How does a JavaScript language feature travel all the way from being an idea in somebody's head to being available in your favorite engine? In this talk, we'll learn about optional chaining's journey through TC39 and the details of its implementation in JavaScriptCore. Be there or be `undefined`!
  descriptionJa: >-
    誰かの頭の中のアイデアが、どうやって世界の誰でも使えるJavaScript機能になるのだろうか。オプショナルチェーンを事例にして学びましょう！TC39でどう標準化されたか、JavaScriptCoreでどう実装されたか、皆さんに愛される演算子が旅してきた道のりについて語ります。お見逃しなく！
  spokenLanguage: en
  slideLanguage: en
  # sponsorIDs: [xxx]
  speakerIDs:
    - ross-kirsling

# 5
- uuid: client-side-ddd-in-the-age-of-declarative-ui-grand-considerations
  date: day1
  startsAt: "11:30"
  endsAt: "12:00"
  room: B
  title: 宣言的 UI 時代のクライアントサイド DDD 大考察
  titleJa: 宣言的 UI 時代のクライアントサイド DDD 大考察
  description: >-
    (Untranslated)
    React Hooks と GraphQL の台頭により、近年の SPA 開発は大きく変化したかと思います。Redux のような状態管理ライブラリを導入すること無しに、UI に即した Read Model を API Client のキャッシュ機構に持たせることで、クライアントサイドの構造を薄く保つことが可能になりました。

    構造を薄く保つことは開発体験の向上にも繋がりますし、状態管理ライブラリのある種の複雑さに対する揺り戻しも相まってか、クライアントサイドで設計を作り込むことに対する疑心も、さまざまな場面で言及されているように感じます。

    さて、設計の戦略・戦術は多くのものが存在しますが、中でも DDD: Domain Driven Design は、しばしばエンジニアの関心を引くと同時に、頭を悩ませているものの1つでしょう。

    このセッションでは、クライアントサイドの構造を薄く保ちながら、いかに DDD のような手法の恩恵を得るかを、考察してみたいと思います。
  descriptionJa: >-
    React Hooks と GraphQL の台頭により、近年の SPA 開発は大きく変化したかと思います。Redux のような状態管理ライブラリを導入すること無しに、UI に即した Read Model を API Client のキャッシュ機構に持たせることで、クライアントサイドの構造を薄く保つことが可能になりました。

    構造を薄く保つことは開発体験の向上にも繋がりますし、状態管理ライブラリのある種の複雑さに対する揺り戻しも相まってか、クライアントサイドで設計を作り込むことに対する疑心も、さまざまな場面で言及されているように感じます。

    さて、設計の戦略・戦術は多くのものが存在しますが、中でも DDD: Domain Driven Design は、しばしばエンジニアの関心を引くと同時に、頭を悩ませているものの1つでしょう。

    このセッションでは、クライアントサイドの構造を薄く保ちながら、いかに DDD のような手法の恩恵を得るかを、考察してみたいと思います。
  spokenLanguage: ja
  slideLanguage: ja
  # sponsorIDs: [xxx]
  speakerIDs:
    - guvalif

# 6
- uuid: hono-ultrafast-web-framework-for-cloudflare-workers-deno-bun-and-nodejs
  date: day1
  startsAt: "13:00"
  endsAt: "13:30"
  room: A
  title: Hono - Ultrafast web framework for Cloudflare Workers, Deno, Bun, and Node.js
  titleJa: Hono - Ultrafast web framework for Cloudflare Workers, Deno, Bun, and Node.js
  description: >-
    Talking about the web framework named "Hono".
  descriptionJa: >-
    (Untranslated)
    Talking about the web framework named "Hono".
  spokenLanguage: ja
  slideLanguage: ja
  # sponsorIDs: [xxx]
  speakerIDs:
    - yusuke-wada

# 7
- uuid: passkey-and-how-it-works-on-google-ecosystem
  date: day1
  startsAt: "13:00"
  endsAt: "13:30"
  room: B
  title: Passkey and how it works on Google ecosystem
  titleJa: Passkey and how it works on Google ecosystem
  description: >-
    (Untranslated)
    This talk goes through the basics of passkeys, why what and how.
    Then introduces how Google approaches passkeys in Android and Chrome.
  descriptionJa: >-
    (Untranslated)
    This talk goes through the basics of passkeys, why what and how.
    Then introduces how Google approaches passkeys in Android and Chrome.
  spokenLanguage: ja
  slideLanguage: ja
  # sponsorIDs: [xxx]
  speakerIDs:
    - eiji-kitamura

# 8
- uuid: reducing-bugs-in-a-react-codebase
  date: day1
  startsAt: "13:30"
  endsAt: "14:00"
  room: A
  title: Reducing bugs in a React codebase
  titleJa: Reducing bugs in a React codebase
  description: >-
    This is a novel and original look into some of the unexpected behaviors in a React codebase and the anti-patterns that cause them. We discovered them while building a new full-stack web development framework on top of React.

    We published some of our learnings and received overwhelmingly positive reactions from developers worldwide such as:

    1. Selected as the top article of the week by various newsletters

    2. Developers voluntarily translated the article into many languages such as South Korean and Russian

    3. Reached 100K+ developers with comments such as “Changed my day!”

    We wish to share these learnings with an even wider developer community through this conference. (https://betterprogramming.pub/how-we-reduced-bugs-in-our-react-code-base-9a7a979b4442)
  descriptionJa: >-
    (Untranslated)
    This is a novel and original look into some of the unexpected behaviors in a React codebase and the anti-patterns that cause them. We discovered them while building a new full-stack web development framework on top of React.

    We published some of our learnings and received overwhelmingly positive reactions from developers worldwide such as:

    1. Selected as the top article of the week by various newsletters

    2. Developers voluntarily translated the article into many languages such as South Korean and Russian

    3. Reached 100K+ developers with comments such as “Changed my day!”

    We wish to share these learnings with an even wider developer community through this conference. (https://betterprogramming.pub/how-we-reduced-bugs-in-our-react-code-base-9a7a979b4442)
  spokenLanguage: en
  slideLanguage: en
  # sponsorIDs: [xxx]
  speakerIDs:
    - shyam-swaroop

# 9
- uuid: names-and-other-lies
  date: day1
  startsAt: "13:30"
  endsAt: "14:00"
  room: B
  title: Names, and other lies
  titleJa: Names, and other lies
  description: >-
    First names don't exist. Timezones are imaginary. Addresses are a *nightmare.*

    Every day our systems gather and process information about our customers: Demographic data. Every day, we screw up. These screwups can result in anything from irritating data-entry quirks to full-on system meltdowns. Let alone how it makes our users feel! How would you like a computer telling you, ""*your name makes my processor hurt; choose something 'better'*""?

    I'm going to run you through some of the *many* ways in which testers, developers and systems designers get demographic data wrong. We'll burn down our assumptions about what's ""Correct"" in names, timezones, addresses and more, one after another, leaving us with a smoking heap of despair. Our test data will be rent asunder. Our schemas will weep.

    But what kind of Engineer would I be if I only left you there?! We can rebuild: We have the technology! We'll see some practical suggestions for building flexible data schemas and learn how to craft clever tests that force system designers to account for reality.

    We're Engineers. We apply Science and Math to the improvement of Humanity. So let's make sure we *include* humanity when we do it. Enough with the lies!
  descriptionJa: >-
    (Untranslated)
    First names don't exist. Timezones are imaginary. Addresses are a *nightmare.*

    Every day our systems gather and process information about our customers: Demographic data. Every day, we screw up. These screwups can result in anything from irritating data-entry quirks to full-on system meltdowns. Let alone how it makes our users feel! How would you like a computer telling you, ""*your name makes my processor hurt; choose something 'better'*""?

    I'm going to run you through some of the *many* ways in which testers, developers and systems designers get demographic data wrong. We'll burn down our assumptions about what's ""Correct"" in names, timezones, addresses and more, one after another, leaving us with a smoking heap of despair. Our test data will be rent asunder. Our schemas will weep.

    But what kind of Engineer would I be if I only left you there?! We can rebuild: We have the technology! We'll see some practical suggestions for building flexible data schemas and learn how to craft clever tests that force system designers to account for reality.

    We're Engineers. We apply Science and Math to the improvement of Humanity. So let's make sure we *include* humanity when we do it. Enough with the lies!
  spokenLanguage: ja
  slideLanguage: ja
  # sponsorIDs: [xxx]
  speakerIDs:
    - dylan-lacey

# 10
- uuid: current-state-of-npm-support-in-deno
  date: day1
  startsAt: "14:15"
  endsAt: "14:45"
  room: A
  title: Current state of Npm support in Deno
  titleJa: Current state of Npm support in Deno
  description: >-
    (Untranslated)
    Deno の npm 互換性への取り組みを紹介します。npm 互換性を入れることになった動機や意図を紐解きつつ、npm 互換性の目指している事・目指していない事や、現状出来ている事・出来ていない事、今後のロードマップなどを紹介します。
  descriptionJa: >-
    Deno の npm 互換性への取り組みを紹介します。npm 互換性を入れることになった動機や意図を紐解きつつ、npm 互換性の目指している事・目指していない事や、現状出来ている事・出来ていない事、今後のロードマップなどを紹介します。
  spokenLanguage: ja
  slideLanguage: ja
  # sponsorIDs: [xxx]
  speakerIDs:
    - kt3k

# 11
- uuid: creating-accessibility-environments-to-help-diverse-participation-in-tech
  date: day1
  startsAt: "14:15"
  endsAt: "14:45"
  room: B
  title: Creating accessibility environments to help diverse participation in tech
  titleJa: Creating accessibility environments to help diverse participation in tech
  description: >-
    In this talk I would like to highlight about what application developers who use JavaScripts can add accessibility to their agenda. Creating checklists, understanding end users and targeting diverse audiences all leads to success of an application or product. The very understanding of these accessibilities needs from a Neurodivergent perspectives is what I would like to emphasize on. A web page containing JavaScript will typically be fully accessible if the functionality of the script is device independent (does not require only a mouse or only a keyboard) and the information (content) is available to assistive technologies. There is no easy fix that can be applied to solve all accessibility problems associated with JavaScript. The only way to ensure JavaScript accessibility is by evaluating each page that utilizes scripting and devising a unique solution to any accessibility problem found. I would like to recommend a handy cheatsheet or checklist which I have been working on which can ease the evaluation process for the developers. Understanding the grassroot problems and addressing the needs of it technically is what can help in resulting great tools and products for the future. I strongly believe that accessibility is no more a feature but an essential component of a product that needs to be considered even before the development.
  descriptionJa: >-
    (Untranslated)
    In this talk I would like to highlight about what application developers who use JavaScripts can add accessibility to their agenda. Creating checklists, understanding end users and targeting diverse audiences all leads to success of an application or product. The very understanding of these accessibilities needs from a Neurodivergent perspectives is what I would like to emphasize on. A web page containing JavaScript will typically be fully accessible if the functionality of the script is device independent (does not require only a mouse or only a keyboard) and the information (content) is available to assistive technologies. There is no easy fix that can be applied to solve all accessibility problems associated with JavaScript. The only way to ensure JavaScript accessibility is by evaluating each page that utilizes scripting and devising a unique solution to any accessibility problem found. I would like to recommend a handy cheatsheet or checklist which I have been working on which can ease the evaluation process for the developers. Understanding the grassroot problems and addressing the needs of it technically is what can help in resulting great tools and products for the future. I strongly believe that accessibility is no more a feature but an essential component of a product that needs to be considered even before the development.
  spokenLanguage: en
  slideLanguage: en
  # sponsorIDs: [xxx]
  speakerIDs:
    - bhuvana-meenakshi-koteeswaran

# 12
- uuid: secret-shortcuts-of-loading-web-performance
  date: day1
  startsAt: "14:45"
  endsAt: "15:15"
  room: A
  title: Secret Shortcuts of Loading Web Performance
  titleJa: Secret Shortcuts of Loading Web Performance
  description: >-
    In this presentation, we talk about how to optimize the delivery of the files on which your web application depends (HTML, CSS, JS, images, etc.).

    How to effectively watch out for your JS bundle size and split it into multiple chunks with techniques like lazy loading?

    How to apply advanced caching strategies with the help of Cache API and Service Workers so we don't request the same files all over again?

    How to minimize and compress files over the network to make them the smallest possible? How to handle large images in our app?

    These are some of the questions that we're going to answer, with a lot of real-life examples in React and show how to reduce the loading time of your web app 🚀
  descriptionJa: >-
    (Untranslated)
    In this presentation, we talk about how to optimize the delivery of the files on which your web application depends (HTML, CSS, JS, images, etc.).

    How to effectively watch out for your JS bundle size and split it into multiple chunks with techniques like lazy loading?

    How to apply advanced caching strategies with the help of Cache API and Service Workers so we don't request the same files all over again?

    How to minimize and compress files over the network to make them the smallest possible? How to handle large images in our app?

    These are some of the questions that we're going to answer, with a lot of real-life examples in React and show how to reduce the loading time of your web app 🚀
  spokenLanguage: en
  slideLanguage: en
  # sponsorIDs: [xxx]
  speakerIDs:
    - nikola-mitrovic

# 13
- uuid: svelte-runtime-101
  date: day1
  startsAt: "14:45"
  endsAt: "15:15"
  room: B
  title: Svelte Runtime 101
  titleJa: Svelte Runtime 101
  description: >-
    (Untranslated)
    これは、仮想DOMを使用しない宣言的UIフレームワークであるSvelteに関するセッションです。

    今回は、Svelteコンポーネントがどのようなランタイムになるのかを解説します。このセッションを聞くことで、なぜSvelteランタイムが小さく高速なのかを理解できます。
  descriptionJa: >-
    これは、仮想DOMを使用しない宣言的UIフレームワークであるSvelteに関するセッションです。

    今回は、Svelteコンポーネントがどのようなランタイムになるのかを解説します。このセッションを聞くことで、なぜSvelteランタイムが小さく高速なのかを理解できます。
  spokenLanguage: ja
  slideLanguage: ja
  # sponsorIDs: [xxx]
  speakerIDs:
    - baseballyama

# 14
- uuid: bbc-our-experiences-of-js-and-cloud
  date: day1
  startsAt: "15:30"
  endsAt: "16:00"
  room: A
  title: BBC - Our experiences of JS and Cloud
  titleJa: BBC - Our experiences of JS and Cloud
  description: >-
    Over the last decade the BBC has moved all its only products to the cloud, and the primary programming language in use is JS (Node for APIs, and serverside logic) and predominantly ReactJS for web user experiences. In this talk I cover:

    - How we did it
    - Why we did it
    - What strategies we applied
    - What we learned
    - What went wrong (the really important part!)

    The change had three parts: the technical change, the people/team change, and the organisational change, and each brought their own challenges.

    Our stack is now almost entirely JS, and its serving billions of requests from tens of millions of UK users (bbc.co.uk, bbc.co.uk/news etc), and hundreds of millions of user across the world (bbc.com, bbc.com/news, etc)
  descriptionJa: >-
    (Untranslated)
    Over the last decade the BBC has moved all its only products to the cloud, and the primary programming language in use is JS (Node for APIs, and serverside logic) and predominantly ReactJS for web user experiences. In this talk I cover:

    - How we did it
    - Why we did it
    - What strategies we applied
    - What we learned
    - What went wrong (the really important part!)

    The change had three parts: the technical change, the people/team change, and the organisational change, and each brought their own challenges.

    Our stack is now almost entirely JS, and its serving billions of requests from tens of millions of UK users (bbc.co.uk, bbc.co.uk/news etc), and hundreds of millions of user across the world (bbc.com, bbc.com/news, etc)
  spokenLanguage: en
  slideLanguage: en
  # sponsorIDs: [xxx]
  speakerIDs:
    - craig-jones

# 15
- uuid: remixing-usability-with-performance
  date: day1
  startsAt: "15:30"
  endsAt: "16:00"
  room: B
  title: Remixing Usability with Performance
  titleJa: Remixing Usability with Performance
  description: >-
    We are going to talk about the benefits of using Optimistic UI from the perspective of UX and Usability.

    Once the value is established, we check what are the important caveats to be aware of, and most importantly when to use it. Moving on to more practical examples, we check the concepts behind the related Remix APIs (loader function, action function, useLoaderData , useActionData,  useTransition,  useFetcher), and finally: some live-coding to illustrate what we have all discussed - we create a DB table on stage so we can query and mutate data.
  descriptionJa: >-
    (Untranslated)
    We are going to talk about the benefits of using Optimistic UI from the perspective of UX and Usability.

    Once the value is established, we check what are the important caveats to be aware of, and most importantly when to use it. Moving on to more practical examples, we check the concepts behind the related Remix APIs (loader function, action function, useLoaderData , useActionData,  useTransition,  useFetcher), and finally: some live-coding to illustrate what we have all discussed - we create a DB table on stage so we can query and mutate data.
  spokenLanguage: en
  slideLanguage: en
  # sponsorIDs: [xxx]
  speakerIDs:
    - atila-fassina

# 16
- uuid: what-is-a-web-interoperable-runtime
  date: day1
  startsAt: "16:00"
  endsAt: "16:30"
  room: A
  title: What is a Web-interoperable Runtime?
  titleJa: What is a Web-interoperable Runtime?
  description: >-
    For the longest time, Node.js was the only choice developers had for running JavaScript outside of a Web Browser.
    Today, however, we have additional runtimes like Deno, Bun, and Cloudflare's workerd that provide new options.
    How do we ensure that these new runtimes remain interoperable and that JavaScript code can remain portable across all environments?
  descriptionJa: >-
    (Untranslated)
    For the longest time, Node.js was the only choice developers had for running JavaScript outside of a Web Browser.
    Today, however, we have additional runtimes like Deno, Bun, and Cloudflare's workerd that provide new options.
    How do we ensure that these new runtimes remain interoperable and that JavaScript code can remain portable across all environments?
  spokenLanguage: en
  slideLanguage: en
  # sponsorIDs: [xxx]
  speakerIDs:
    - james-m-snell

# 17
- uuid: optimizing-interaction-to-next-paint-imp
  date: day1
  startsAt: "16:00"
  endsAt: "16:30"
  room: B
  title: Optimizing Interaction to Next Paint (INP)
  titleJa: Optimizing Interaction to Next Paint (INP)
  description: >-
    Did you know that 90% of time spent on most web pages is after page load? In this span of time, users are interacting with your website through a series of interactions such as clicks, taps, and keyboard inputs—and the slower your website is to respond to those interactions, the more likely your users will have a negative user experience with your website.

    At Google, we've invested significant time in creating new metrics to assess page responsiveness. One of these metrics is First Input Delay (FID), which is a load responsiveness metric that captures the input delay of the first interaction. However, we discovered that we needed a new responsiveness metric that samples more than just the first interaction—and more than simply that interaction's input delay.

    In order to comprehensively assess overall page responsiveness, we've created the new Interaction to Next Paint (INP) metric. INP samples all page interactions, and goes beyond measuring just the input delay. In this talk, you'll find out all about INP, how it works, why it matters, how you can measure it, and how you can improve it.
  descriptionJa: >-
    (Untranslated)
    Did you know that 90% of time spent on most web pages is after page load? In this span of time, users are interacting with your website through a series of interactions such as clicks, taps, and keyboard inputs—and the slower your website is to respond to those interactions, the more likely your users will have a negative user experience with your website.

    At Google, we've invested significant time in creating new metrics to assess page responsiveness. One of these metrics is First Input Delay (FID), which is a load responsiveness metric that captures the input delay of the first interaction. However, we discovered that we needed a new responsiveness metric that samples more than just the first interaction—and more than simply that interaction's input delay.

    In order to comprehensively assess overall page responsiveness, we've created the new Interaction to Next Paint (INP) metric. INP samples all page interactions, and goes beyond measuring just the input delay. In this talk, you'll find out all about INP, how it works, why it matters, how you can measure it, and how you can improve it.
  spokenLanguage: en
  slideLanguage: en
  # sponsorIDs: [xxx]
  speakerIDs:
    - jeremy-wagner

#
# スポンサートーク
#
- uuid: sponsor-talk-miidas
  date: day1
  startsAt: "11:00"
  endsAt: "11:30"
  room: C
  title: by ミイダス株式会社
  titleJa: by ミイダス株式会社
  sponsorIDs: [miidas]
- uuid: sponsor-talk-nota
  date: day1
  startsAt: "11:30"
  endsAt: "12:00"
  room: C
  title: by Nota株式会社
  titleJa: by Nota株式会社
  sponsorIDs: [nota]
- uuid: sponsor-talk-dwango
  date: day1
  startsAt: "13:00"
  endsAt: "13:30"
  room: C
  title: by dwango
  titleJa: by dwango
  sponsorIDs: [dwango]
- uuid: sponsor-talk-kaonavi
  date: day1
  startsAt: "13:30"
  endsAt: "14:00"
  room: C
  title: by 株式会社カオナビ
  titleJa: by 株式会社カオナビ
  sponsorIDs: [kaonavi]
- uuid: sponsor-talk-twillio
  date: day1
  startsAt: "14:15"
  endsAt: "14:45"
  room: C
  title: by Twilio Inc
  titleJa: by Twilio Inc
  sponsorIDs: [twilio]
- uuid: sponsor-talk-cybozu
  date: day1
  startsAt: "14:45"
  endsAt: "15:15"
  room: C
  title: by サイボウズ株式会社
  titleJa: by サイボウズ株式会社
  sponsorIDs: [cybozu]
- uuid: sponsor-talk-wantedly
  date: day1
  startsAt: "15:30"
  endsAt: "16:00"
  room: C
  title: by ウォンテッドリー株式会社
  titleJa: by ウォンテッドリー株式会社
  sponsorIDs: [wantedly]

#
# LT
#
- uuid: javascript-testing-framework-under-the-hood
  date: day1
  startsAt: "17:40"
  endsAt: "17:50"
  room: A
  title: >-
    JavaScript Testing Framework: Under the Hood
  titleJa: >-
    JavaScript Testing Framework: Under the Hood
  description: >-
    In this LT, I'm not going to talk about ""how to set up a test framework"", ""how to run `.test.ts` files"", ""how to use ESM in tests?"", etc. in JavaScript.
    Instead, I will introduce the internal workings of a test framework(like Jest, Vitest, etc.) through simple demos, so that you can get a general idea of how they work.
    I hope this LT will spark your interest , make you dive into the code reading.
  descriptionJa: >-
    このLTではJavaScriptにおける""テストフレームワークのセットアップの仕方""や"".tsファイルのテスト実行の仕方""、""テストをESM対応するには？""といった話は一切しません。
    代わりに普段なぜ動いているのか気にすることのないテストフレームワーク(JestやVitestなど)の内部動作を簡易的なデモを通して紹介し、大まかな動作の流れを掴むことを目的とします。
    LTを通してコードリーディングや興味のきっかけになれば幸いです。
  spokenLanguage: en
  slideLanguage: en
  speakerIDs:
    - togami2864
- uuid: small-tips-to-use-bun-with-websocket-server-and-webassembly-modules
  date: day1
  startsAt: "17:50"
  endsAt: "18:00"
  room: A
  title: Small Tips to use Bun with WebSocket Server and  WebAssembly Modules. / Bun と WebSocket Server とオマケのWebAssembly
  titleJa: Small Tips to use Bun with WebSocket Server and  WebAssembly Modules. / Bun と WebSocket Server とオマケのWebAssembly
  description: >-
    Bun is a new JavaScript runtime. I would like to share some small tips to use WebSocket Server and WebAssembly modules.
  descriptionJa: >-
    JavaScriptのランタイムとして話題のBunを動かしてみました。WebSocketサーバーを使う際や、WebAssemblyのモジュールを呼び出す際のちょっとしたTipsについてお話します。
  spokenLanguage: ja
  slideLanguage: ja
  speakerIDs:
    - masashi-ganeko
- uuid: pack-front-end-practices-into-the-design-system-and-redistribute
  date: day1
  startsAt: "18:00"
  endsAt: "18:10"
  room: A
  title: デザインシステムにフロントエンドのプラクティスを詰め込んで再配布する
  titleJa: デザインシステムにフロントエンドのプラクティスを詰め込んで再配布する
  description: >-
    (Untranslated)
    デザインシステムの取り組みはデザインだけではなく、HTML、CSS、a11yの最新知識、プラクティスを取り込み、UIライブラリとして各チームに知識を再分配します。
    今回はこのデザインシステムの取り組みの中で、実際にUIライブラリに実装した事例を交えつつ、デザインシステムでのフロントエンドの取り組みを紹介します。
  descriptionJa: >-
    デザインシステムの取り組みはデザインだけではなく、HTML、CSS、a11yの最新知識、プラクティスを取り込み、UIライブラリとして各チームに知識を再分配します。
    今回はこのデザインシステムの取り組みの中で、実際にUIライブラリに実装した事例を交えつつ、デザインシステムでのフロントエンドの取り組みを紹介します。
  spokenLanguage: ja
  slideLanguage: ja
  speakerIDs:
    - sakito-mukai
- uuid: internal-implementation-of-react
  date: day1
  startsAt: "18:10"
  endsAt: "18:20"
  room: A
  title: Reactの内部実装
  titleJa: Reactの内部実装
  description: >-
    (Untranslated)
    このトークでは、Reactがどのようなアーキテクチャに基づいて実装されているかを概観し,
    なぜそれが必要だったのかを整理します。
    現在のReactは実装が複雑で、キャッチアップが難しいものとなっています。複雑なFiber Reconcilerの構造を理解し全体像を把握することで、現在のReactの動向を追います。
  descriptionJa: >-
    このトークでは、Reactがどのようなアーキテクチャに基づいて実装されているかを概観し,
    なぜそれが必要だったのかを整理します。
    現在のReactは実装が複雑で、キャッチアップが難しいものとなっています。複雑なFiber Reconcilerの構造を理解し全体像を把握することで、現在のReactの動向を追います。
  spokenLanguage: ja
  slideLanguage: ja
  speakerIDs:
    - noyan
- uuid: seeking-technology-to-make-ecmascript-specifications-readable-to-everyone
  date: day1
  startsAt: "18:20"
  endsAt: "18:30"
  room: A
  title: ECMAScript仕様書を誰でも読めるようにする技術を求めて
  titleJa: ECMAScript仕様書を誰でも読めるようにする技術を求めて
  description: >-
    (Untranslated)
    JavaScriptを読み書きしていると、ECMAScriptの仕様書を読みたくなる瞬間が必ず訪れます。しかし、ECMAScriptの仕様書を読み解くためには多くの前提知識が必要となります。
    このトークでは、そのような典型的な前提知識に触れながら、そのような前提知識を閲覧者に適宜フィードバックするために試作したブラウザ拡張を紹介します。
  descriptionJa: >-
    JavaScriptを読み書きしていると、ECMAScriptの仕様書を読みたくなる瞬間が必ず訪れます。しかし、ECMAScriptの仕様書を読み解くためには多くの前提知識が必要となります。
    このトークでは、そのような典型的な前提知識に触れながら、そのような前提知識を閲覧者に適宜フィードバックするために試作したブラウザ拡張を紹介します。
  spokenLanguage: ja
  slideLanguage: ja
  speakerIDs:
    - yebis0942
- uuid: web-runtime
  date: day1
  startsAt: "18:30"
  endsAt: "19:00"
  room: A
  title: Web Runtime
  titleJa: Web Runtime
  description: >-
    (Untranslated)
    Web ブラウザとレンダリングエンジンは Chrome と Chromium の寡占によって多様性が失われつつあるといわれる反面、
    JavaScript エンジンから Node, Deno, Bun や Wasntime, Wasmer などのように、Web のランタイムは多様性を増すばかりです。

    Web とは、Web 技術とは、Web ランタイムとは、どこから来て何処へ行くのか。歴史も振り返りつつこれからの Web について考えてみましょう。
  descriptionJa: >-
    Web ブラウザとレンダリングエンジンは Chrome と Chromium の寡占によって多様性が失われつつあるといわれる反面、
    JavaScript エンジンから Node, Deno, Bun や Wasntime, Wasmer などのように、Web のランタイムは多様性を増すばかりです。

    Web とは、Web 技術とは、Web ランタイムとは、どこから来て何処へ行くのか。歴史も振り返りつつこれからの Web について考えてみましょう。
  spokenLanguage: ja
  slideLanguage: ja
  speakerIDs:
    - dynamis

# オープニング
- uuid: start-talk
  date: day1
  startsAt: "10:00"
  endsAt: "10:30"
  room: A
  title: Start talk by Yosuke Furukawa
  titleJa: オープニング by Yosuke Furukawa

# 休憩1
- uuid: "day1-break-1200-1300"
  date: day1
  startsAt: "12:00"
  endsAt: "13:00"
  room: A
  title: Break
  titleJa: 休憩
# 休憩2
- uuid: "day1-break-1400-1415"
  date: day1
  startsAt: "14:00"
  endsAt: "14:15"
  room: A
  title: Break
  titleJa: 休憩
# 休憩3
- uuid: "day1-break-1515-1530"
  date: day1
  startsAt: "15:15"
  endsAt: "15:30"
  room: A
  title: Break
  titleJa: 休憩
# 休憩4
- uuid: "day1-break-1630-1645"
  date: day1
  startsAt: "16:30"
  endsAt: "16:45"
  room: A
  title: Break
  titleJa: 休憩
# 休憩5
- uuid: "day1-break-1725-1740"
  date: day1
  startsAt: "17:25"
  endsAt: "17:40"
  room: A
  title: Break
  titleJa: 休憩

# エンディング
- uuid: ending
  date: day1
  startsAt: "19:00"
  endsAt: "19:05"
  room: A
  title: Ending
  titleJa: エンディング

# 懇親会
- uuid: drink-party
  date: day1
  startsAt: "19:05"
  endsAt: "21:00"
  room: A
  title: Drink Party
  titleJa: 懇親会

# スポンサーLT
- uuid: miidas-js-conf-jp-2022-sponsor-lt
  date: day1
  startsAt: "16:45"
  endsAt: "16:50"
  room: A
  title: miidas JSConf JP 2022 Sponsor LT
  titleJa: miidas JSConf JP 2022 Sponsor LT
  sponsorIDs: [miidas]
- uuid: nota-js-conf-jp-2022-sponsor-lt
  date: day1
  startsAt: "16:50"
  endsAt: "16:55"
  room: A
  title: Helpfeel JSConf JP 2022 Sponsor LT
  titleJa: Helpfeel JSConf JP 2022 Sponsor LT
  sponsorIDs: [nota]
- uuid: dwango-js-conf-jp-2022-sponsor-lt
  date: day1
  startsAt: "16:55"
  endsAt: "17:00"
  room: A
  title: dwango JSConf JP 2022 Sponsor LT
  titleJa: dwango JSConf JP 2022 Sponsor LT
  sponsorIDs: [dwango]
- uuid: kaonavi-js-conf-jp-2022-sponsor-lt
  date: day1
  startsAt: "17:00"
  endsAt: "17:05"
  room: A
  title: カオナビ JSConf JP 2022 Sponsor LT
  titleJa: カオナビ JSConf JP 2022 Sponsor LT
  sponsorIDs: [kaonavi]
- uuid: twilio-js-conf-jp-2022-sponsor-lt
  date: day1
  startsAt: "17:05"
  endsAt: "17:10"
  room: A
  title: Twilio JSConf JP 2022 Sponsor LT
  titleJa: Twilio JSConf JP 2022 Sponsor LT
  sponsorIDs: [twilio]
- uuid: cybozu-js-conf-jp-2022-sponsor-lt
  date: day1
  startsAt: "17:15"
  endsAt: "17:20"
  room: A
  title: サイボウズ JSConf JP 2022 Sponsor LT
  titleJa: サイボウズ JSConf JP 2022 Sponsor LT
  sponsorIDs: [cybozu]
- uuid: wantedly-js-conf-jp-2022-sponsor-lt
  date: day1
  startsAt: "17:20"
  endsAt: "17:25"
  room: A
  title:  ウォンテッドリー JSConf JP 2022 Sponsor LT
  titleJa: ウォンテッドリー JSConf JP 2022 Sponsor LT
  sponsorIDs: [wantedly]
- uuid: building-offline-and-real-time-applications-the-magic-of-crdts
  date: day1
  startsAt: "16:00"
  endsAt: "16:30"
  room: C
  title: Building Offline and Real-Time Applications – The Magic of CRDTs
  titleJa: Building Offline and Real-Time Applications – The Magic of CRDTs
  description: >-
    Real-time and offline applications have opened the door to premium, native-like experiences on the web. These features have set sites apart from their competition, allowing Google Docs to dethrone Microsoft Word, Figma to overtake Sketch, and Slack to nearly replace email.
    "The underlying magic powering many of these sites is CRDTs: Conflict-free replicated data types — a type of data structure used in distributed applications. Despite the daunting-sounding jargon, CRDTs as tool in your toolkit can be understood and used pretty simply."
    By walking through an example of a to-do list application, we'll see how a traditional approach to managing a todo list state may begin to break when using it while offline. Having users edit the same to-do list items simultaneously can lead to an incorrect or corrupt state.
    We'll then gradually convert the application state to use the three CRDT principles: commutativity, associativity, and idempotency, to make it resilient to changes being made concurrently or offline.
    Finally, we'll briefly demonstrate examples of real-world applications using CRDTs in production and what their underlying design might look like. In the end, attendees should know enough of the basics of CRDTs to put them into practice in apps they're developing today.
  descriptionJa: >-
    Real-time and offline applications have opened the door to premium, native-like experiences on the web. These features have set sites apart from their competition, allowing Google Docs to dethrone Microsoft Word, Figma to overtake Sketch, and Slack to nearly replace email.
    "The underlying magic powering many of these sites is CRDTs: Conflict-free replicated data types — a type of data structure used in distributed applications. Despite the daunting-sounding jargon, CRDTs as tool in your toolkit can be understood and used pretty simply."
    By walking through an example of a to-do list application, we'll see how a traditional approach to managing a todo list state may begin to break when using it while offline. Having users edit the same to-do list items simultaneously can lead to an incorrect or corrupt state.
    We'll then gradually convert the application state to use the three CRDT principles: commutativity, associativity, and idempotency, to make it resilient to changes being made concurrently or offline.
    Finally, we'll briefly demonstrate examples of real-world applications using CRDTs in production and what their underlying design might look like. In the end, attendees should know enough of the basics of CRDTs to put them into practice in apps they're developing today.
  spokenLanguage: en
  slideLanguage: en
  # sponsorIDs: [xxx]
  speakerIDs:
    - matan-kushner
