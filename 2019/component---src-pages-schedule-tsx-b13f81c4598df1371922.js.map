{"version":3,"sources":["webpack:///./src/components/RoomLegend.tsx","webpack:///./src/util/rangeTimeBoxes.ts","webpack:///./src/pages/schedule.tsx","webpack:///./src/util/generateTimetable.ts","webpack:///./src/components/Title.tsx","webpack:///./src/components/ResponsiveBox.tsx","webpack:///./src/components/Breadcrumb.tsx","webpack:///./src/util/languages.ts","webpack:///./src/util/misc.ts","webpack:///./src/components/SubTitle.tsx"],"names":["Box","styled","div","withConfig","displayName","componentId","_ref","theme","breakpoints","mobile","RoomBox","_ref2","Circle","_ref3","area","colors","Text","span","_ref4","fonts","text","RoomLegend","t","useTranslation","react_default","a","createElement","rooms","map","room","key","zeroFill","num","digits","String","padStart","escapeTime","time","replace","Grid","concat","r","join","startsAt","endsAt","everyMinutes","startHours","endHours","timeboxes","hour","h","Math","floor","m","push","rangeTimeBoxes","getHours","Area","_Link","track","isBreak","_ref5","disabled","_ref6","disabledText","_ref7","_ref8","DaysButtonBox","_ref9","SubTitle","_SubTitle","_ref10","border","RoomLegendBox","_ref11","_ref12","SchedulePage","_useTranslation","i18n","_staticQueryData$data","_55795414","data","allSpeakersYaml","allTalksYaml","timetable","speakers","talks","lookup","reduce","acc","speaker","_Object$assign","Object","assign","uuid","talksByDay","groupBy","talk","date","talksByTimeboxes","mapValues","sessions","sortBy","break","title","speakerIDs","speakerID","Error","session","keys","timebox","split","day1","day2","generateTimetable","edges","_ref13","node","_ref14","days","times","sort","dateTimeFormatter","Intl","DateTimeFormat","language","dateStyle","useLayoutEffect","location","hash","selector","el","document","querySelector","top","getBoundingClientRect","window","scrollTo","Layout","Seo","description","ResponsiveBox","Breadcrumb","path","Title","LinkButton","color","size","to","format","day","_times$day","flatten","_ref15","Fragment","schedule_SubTitle","id","s","hasDescription","length","undefined","schedule_Text","enOrJa","titleJa","name","__webpack_require__","d","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","h1","header","props","children","innerWidth","styled_components__WEBPACK_IMPORTED_MODULE_1__","react_i18next__WEBPACK_IMPORTED_MODULE_2__","gatsby__WEBPACK_IMPORTED_MODULE_3__","filter","Boolean","label","enStr","jaStr","lang","test","Date","h2"],"mappings":"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","file":"component---src-pages-schedule-tsx-b13f81c4598df1371922.js","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport { useTranslation } from \"react-i18next\"\nimport { Rooms, rooms } from \"../util/misc\"\n\nconst Box = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-around;\n\n  ${({ theme }) => theme.breakpoints.mobile} {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n`\nconst RoomBox = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n\n  ${({ theme }) => theme.breakpoints.mobile} {\n    margin-bottom: 1em;\n  }\n`\nconst Circle = styled.div<{ area: Rooms }>`\n  width: 30px;\n  height: 30px;\n  border-radius: 30px;\n  background-color: ${({ area, theme }) =>\n    // @ts-ignore Dynamic access\n    theme.colors[`room${area}Border`]};\n`\nconst Text = styled.span`\n  flex: 1;\n  margin-left: 10px;\n  font-weight: bold;\n  font-size: 20px;\n  font-family: ${({ theme }) => theme.fonts.text};\n`\n\nexport function RoomLegend() {\n  const { t } = useTranslation()\n  return (\n    <Box>\n      {rooms.map(room => (\n        <RoomBox key={room}>\n          <Circle area={room} />\n          <Text>{t(`room${room}`)}</Text>\n        </RoomBox>\n      ))}\n    </Box>\n  )\n}\n","const zeroFill = (num: number, digits: number) =>\n  String(num).padStart(digits, \"0\")\n\n/**\n * @example `rangeTimeBoxes(15, 10, 19.5) // 10:00から19:30まで15分おきの時刻を生成`\n */\nexport const rangeTimeBoxes = (\n  everyMinutes: number,\n  startHours: number,\n  endHours: number,\n) => {\n  const timeboxes = []\n  for (\n    let hour = startHours * 60;\n    hour <= endHours * 60;\n    hour += everyMinutes\n  ) {\n    const h = Math.floor(hour / 60)\n    const m = hour % 60\n    timeboxes.push(`${zeroFill(h, 2)}:${zeroFill(m, 2)}`)\n  }\n  return timeboxes\n}\n\nexport const escapeTime = (time: string) => time.replace(\":\", \"-\")\n","import React, { useLayoutEffect } from \"react\"\nimport styled from \"styled-components\"\nimport { useTranslation } from \"react-i18next\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport _Link from \"gatsby-link\"\nimport flatten from \"lodash/flatten\"\n\nimport { Layout } from \"../components/Layout\"\nimport { SEO } from \"../components/Seo\"\nimport { Title } from \"../components/Title\"\nimport { SubTitle as _SubTitle } from \"../components/SubTitle\"\nimport { ResponsiveBox } from \"../components/ResponsiveBox\"\nimport { Breadcrumb } from \"../components/Breadcrumb\"\nimport { LinkButton } from \"../components/LinkButton\"\nimport { RoomLegend } from \"../components/RoomLegend\"\nimport { TalkType, SpeakerType } from \"../components/Speaker\"\nimport { generateTimetable } from \"../util/generateTimetable\"\nimport { rangeTimeBoxes, escapeTime } from \"../util/rangeTimeBoxes\"\nimport { Dates, times, Rooms, rooms } from \"../util/misc\"\nimport { enOrJa } from \"../util/languages\"\n\nconst Grid = styled.div<{ startsAt: Date; endsAt: Date }>`\n  display: grid;\n  grid-column-gap: 1em;\n  grid-template-columns: ${rooms\n    .concat(\"D\" as Rooms)\n    .map(r => `[${r}]`)\n    .join(\" 1fr \")};\n  grid-template-rows: ${({ startsAt, endsAt }) =>\n    rangeTimeBoxes(5, startsAt.getHours(), endsAt.getHours())\n      .map(t => `[t-${escapeTime(t)}]`)\n      .join(\" minmax(1em, max-content) \")};\n\n  ${({ theme }) => theme.breakpoints.mobile} {\n    display: flex;\n    flex-direction: column;\n  }\n`\nconst Area = styled(_Link)<{\n  track: Rooms\n  startsAt: string\n  endsAt: string\n  isBreak: boolean\n}>`\n  margin-bottom: 1em;\n  padding: 1em;\n  text-decoration: none;\n  position: relative;\n  grid-column: ${({ track, isBreak }) => (isBreak ? \"A / D\" : track)};\n  grid-row: ${({ startsAt, endsAt }) =>\n    `t-${escapeTime(startsAt)} / t-${escapeTime(endsAt)}`};\n  background-color: ${({ track, isBreak, theme }) =>\n    // @ts-ignore Dynamic access\n    isBreak ? theme.colors.disabled + \"cc\" : theme.colors[`room${track}`]};\n  border-left: 5px solid;\n  border-color: ${({ track, isBreak, theme }) =>\n    // @ts-ignore Dynamic access\n    isBreak ? theme.colors.disabledText : theme.colors[`room${track}Border`]};\n\n  ::before {\n    content: \"\";\n    position: absolute;\n    top: -8px;\n    left: -10px;\n    display: inline-block;\n    width: 16px;\n    height: 16px;\n    border-radius: 100%;\n    background-color: ${({ track, isBreak, theme }) =>\n      // @ts-ignore Dynamic access\n      isBreak ? theme.colors.disabledText : theme.colors[`room${track}Border`]};\n  }\n\n  ${({ theme }) => theme.breakpoints.mobile} {\n    margin-bottom: 1em;\n  }\n`\n\nconst DaysButtonBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n\n  ${({ theme }) => theme.breakpoints.mobile} {\n    flex-direction: column;\n  }\n`\nconst SubTitle = styled(_SubTitle)`\n  text-align: left;\n  margin-top: 20px;\n  padding: 0.2em 1em;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.border};\n`\nconst RoomLegendBox = styled.div`\n  margin-bottom: 2em;\n`\nconst Text = styled.span`\n  color: ${({ theme }) => theme.colors.text};\n  display: block;\n  font-size: 20px;\n  font-family: ${({ theme }) => theme.fonts.text};\n`\n\nexport default function SchedulePage() {\n  const { t, i18n } = useTranslation()\n  const { allSpeakersYaml, allTalksYaml } = useStaticQuery(graphql`\n    query {\n      allSpeakersYaml {\n        edges {\n          node {\n            uuid\n            name\n          }\n        }\n      }\n      allTalksYaml {\n        edges {\n          node {\n            uuid\n            title\n            titleJa\n            description\n            descriptionJa\n            spokenLanguage\n            slideLanguage\n            speakerIDs\n            startsAt\n            endsAt\n            room\n            date\n          }\n        }\n      }\n    }\n  `)\n  const speakers: SpeakerType[] = allSpeakersYaml.edges.map(\n    ({ node }: any) => node,\n  )\n  const talks: TalkType[] = allTalksYaml.edges.map(({ node }: any) => node)\n  const timetable = generateTimetable({ speakers, talks })\n  const days = Object.keys(times).sort() as Dates[]\n  const dateTimeFormatter = new Intl.DateTimeFormat(i18n.language, {\n    // @ts-ignore dateStyle' does not exist in type 'DateTimeFormatOptions'\n    dateStyle: \"medium\",\n  })\n\n  // Open page with hash (ex. direct access, reload)\n  useLayoutEffect(() => {\n    if (!location.hash) {\n      return\n    }\n\n    const selector = location.hash\n    const el = document.querySelector(selector)\n    if (!el) {\n      return\n    }\n    const { top } = el.getBoundingClientRect()\n    window.scrollTo({ top })\n  }, [])\n\n  return (\n    <Layout>\n      <SEO title={t(\"schedule\")} description={t(\"schedule.description\")} />{\" \"}\n      <ResponsiveBox>\n        <Breadcrumb path={[t(\"schedule\")]} />\n        <Title>{t(\"schedule\")}</Title>\n        <DaysButtonBox>\n          <LinkButton color=\"secondary\" size=\"large\" to=\"/schedule/#day1\">\n            {t(\"day1\")} ({dateTimeFormatter.format(times.day1.startsAt)})\n          </LinkButton>\n          <LinkButton color=\"secondary\" size=\"large\" to=\"/schedule/#day2\">\n            {t(\"day2\")} ({dateTimeFormatter.format(times.day2.startsAt)})\n          </LinkButton>\n        </DaysButtonBox>\n\n        {days.map(day => {\n          const { startsAt, endsAt } = times[day]\n          const sessions = flatten(\n            timetable[day].map(({ sessions }) => sessions),\n          )\n          return (\n            <React.Fragment key={day}>\n              <SubTitle id={day}>\n                {t(day)} ({dateTimeFormatter.format(times[day].startsAt)})\n              </SubTitle>\n              <RoomLegendBox>\n                <RoomLegend />\n              </RoomLegendBox>\n              <Grid startsAt={startsAt} endsAt={endsAt}>\n                {sessions.map(s => {\n                  const hasDescription = s.uuid && s.speakers.length\n                  return (\n                    <Area\n                      // @ts-ignore Type 'undefined' is not assignable to type 'string'\n                      to={hasDescription ? `talk/${s.uuid}` : undefined}\n                      key={s.room + s.uuid}\n                      track={s.room}\n                      startsAt={s.startsAt}\n                      endsAt={s.endsAt}\n                      isBreak={s.break}\n                    >\n                      <Text>\n                        {s.startsAt}-{s.endsAt}\n                      </Text>\n                      <Text>{enOrJa(i18n)(s.title, s.titleJa) || \"TBA\"}</Text>\n                      {s.speakers.length ? (\n                        <Text>\n                          by{\" \"}\n                          {s.speakers\n                            .map(speaker => speaker.name)\n                            .join(\" and \")}\n                        </Text>\n                      ) : null}\n                    </Area>\n                  )\n                })}\n              </Grid>\n            </React.Fragment>\n          )\n        })}\n      </ResponsiveBox>\n    </Layout>\n  )\n}\n","import groupBy from \"lodash/groupBy\"\nimport sortBy from \"lodash/sortBy\"\nimport mapValues from \"lodash/mapValues\"\n\nimport { Dates } from \"../util/misc\"\n// FIXME: Should not import from here\nimport { SpeakerType, TalkType } from \"../components/Speaker\"\n\ntype Session = TalkType & {\n  break: boolean\n  speakers: SpeakerType[]\n}\n\ntype Timebox = {\n  timebox: string\n  sessions: Session[]\n}\ntype Timetable = {\n  [K in Dates]: Timebox[]\n}\n\nexport function generateTimetable({\n  speakers,\n  talks,\n}: {\n  speakers: SpeakerType[]\n  talks: TalkType[]\n}): Timetable {\n  const lookup: Record<string, SpeakerType> = speakers.reduce(\n    (acc, speaker) => ({ ...acc, [speaker.uuid]: speaker }),\n    {},\n  )\n\n  const talksByDay = groupBy(talks, talk => talk.date)\n  const talksByTimeboxes = mapValues(talksByDay, (talks): Timebox[] => {\n    const sessions = sortBy(talks, talk => talk.room).map(talk => ({\n      ...talk,\n      break: talk.title === \"Break\",\n      speakers: talk.speakerIDs.map(speakerID => {\n        const speaker = lookup[speakerID]\n        if (!speaker) {\n          throw new Error(\n            `Speaker ${speakerID} not found in \"${talk.title}\" (${talk.uuid})`,\n          )\n        }\n        return speaker\n      }),\n    }))\n    const timeboxes = groupBy(\n      sessions,\n      session => `${session.startsAt}-${session.endsAt}`,\n    )\n    delete timeboxes[\"null-null\"]\n\n    const sortedKeys = sortBy(Object.keys(timeboxes), timebox => {\n      return timebox.split(\"-\")[0]\n    })\n    return sortedKeys.map(key => ({\n      timebox: key,\n      sessions: timeboxes[key],\n    }))\n  })\n\n  return {\n    day1: talksByTimeboxes.day1 || [],\n    day2: talksByTimeboxes.day2 || [],\n  }\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nexport type Props = {\n  children: React.ReactNode\n}\n\nconst Box = styled.h1`\n  text-align: center;\n  margin: 40px 0 60px;\n  font-size: 40px;\n  text-transform: uppercase;\n  font-family: ${({ theme }) => theme.fonts.header};\n`\n\nexport function Title(props: Props) {\n  const { children } = props\n\n  return <Box>{children}</Box>\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nexport type Props = {\n  children: React.ReactNode\n}\n\nconst Box = styled.div`\n  width: 100%;\n  max-width: ${({ theme }) => theme.innerWidth};\n  padding: 2em 1em 5em;\n  margin: 0 auto;\n  box-sizing: border-box;\n`\n\nexport function ResponsiveBox(props: Props) {\n  const { children } = props\n\n  return <Box>{children}</Box>\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { useTranslation } from \"react-i18next\"\nimport { Link } from \"gatsby\"\n\nexport type Props = {\n  path: (string | { label: string; to: string })[]\n}\n\nconst Box = styled.div`\n  display: flex;\n`\nconst Text = styled.span`\n  margin-right: 0.5em;\n  font-size: 14px;\n  font-weight: bold;\n  text-transform: uppercase;\n  font-family: ${({ theme }) => theme.fonts.header};\n  text-transform: uppercase;\n`\n\nexport function Breadcrumb(props: Props) {\n  const { path } = props\n  const { t } = useTranslation()\n\n  return (\n    <Box>\n      <Link to=\"/\">\n        <Text>{t(\"top\")}</Text>\n      </Link>\n      {path.filter(Boolean).map(label => {\n        const path = typeof label === \"string\" ? { label, to: null } : label\n        return (\n          <React.Fragment key={path.label}>\n            <Text>></Text>\n            {path.to ? (\n              <Link to={path.to}>\n                <Text>{path.label}</Text>\n              </Link>\n            ) : (\n              <Text>{path.label}</Text>\n            )}\n          </React.Fragment>\n        )\n      })}\n    </Box>\n  )\n}\n","import i18next from \"i18next\"\n\nexport function enOrJa(i18n: i18next.i18n) {\n  return (enStr: string, jaStr: string) =>\n    isJapanese(i18n.language) && jaStr ? jaStr : enStr\n}\n\nexport function isJapanese(lang: string) {\n  return /ja(-\\w)*/.test(lang)\n}\n","export const times = {\n  day1: {\n    startsAt: new Date(2019, 10, 30, 12, 0),\n    endsAt: new Date(2019, 10, 30, 21, 0),\n  },\n  day2: {\n    startsAt: new Date(2019, 11, 1, 10, 0),\n    endsAt: new Date(2019, 11, 1, 19, 30),\n  },\n}\nexport type Dates = keyof typeof times\n\nexport type Rooms = \"A\" | \"B\" | \"C\"\nexport const rooms: Rooms[] = [\"A\", \"B\", \"C\"]\n","import styled from \"styled-components\"\n\nexport const SubTitle = styled.h2`\n  text-align: center;\n  text-transform: uppercase;\n  font-family: ${({ theme }) => theme.fonts.header};\n  font-size: 40px;\n  margin: 0 0 1em;\n`\n"],"sourceRoot":""}