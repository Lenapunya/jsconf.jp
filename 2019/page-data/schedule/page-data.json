{"componentChunkName":"component---src-pages-schedule-tsx","path":"/schedule/","webpackCompilationHash":"597bf28fa467e3d1e1d8","result":{"data":{"allSpeakersYaml":{"edges":[{"node":{"uuid":"andrew-betts","name":"Andrew Betts"}},{"node":{"uuid":"andy-hall","name":"Andy Hall"}},{"node":{"uuid":"benitte-raphael","name":"Raphaël Benitte"}},{"node":{"uuid":"benjamin-gruenbaum","name":"Benjamin Gruenbaum"}},{"node":{"uuid":"claudia-hernandez","name":"Claudia Hernández"}},{"node":{"uuid":"dynamis","name":"dynamis"}},{"node":{"uuid":"dominic-tarr","name":"Dominic Tarr"}},{"node":{"uuid":"daiki-kuriyama","name":"栗山 太希"}},{"node":{"uuid":"eiji-kitamura","name":"Eiji Kitamura / えーじ"}},{"node":{"uuid":"fuji-goro","name":"FUJI Goro / @__gfx__"}},{"node":{"uuid":"fred-schott","name":"Fred K. Schott"}},{"node":{"uuid":"guillermo-rauch","name":"Guillermo Rauch"}},{"node":{"uuid":"ginpei-takanashi","name":"高梨ギンペイ"}},{"node":{"uuid":"hidetaka-okamoto","name":"Hidetaka Okamoto"}},{"node":{"uuid":"henry-zhu","name":"Henry Zhu"}},{"node":{"uuid":"irina-shestak","name":"Irina Shestak"}},{"node":{"uuid":"jxck","name":"Jxck"}},{"node":{"uuid":"jan-lehnardt","name":"Jan Lehnardt"}},{"node":{"uuid":"jorge-bucaran","name":"Jorge Bucaran"}},{"node":{"uuid":"jonny-kalambay","name":"Jonny Kalambay"}},{"node":{"uuid":"jarrod-overson","name":"Jarrod Overson"}},{"node":{"uuid":"jennifer-wong","name":"Jennifer Wong"}},{"node":{"uuid":"kitson-kelly","name":"Kitson Kelly"}},{"node":{"uuid":"kohei-kido","name":"木戸 康平"}},{"node":{"uuid":"lena-morita","name":"Lena Morita"}},{"node":{"uuid":"masashi-ganeko","name":"がねこまさし"}},{"node":{"uuid":"masato-ohba","name":"ohbarye"}},{"node":{"uuid":"maxi-ferreira","name":"Maxi Ferreira"}},{"node":{"uuid":"mariko-kosaka","name":"Mariko Kosaka"}},{"node":{"uuid":"martin-splitt","name":"Martin Splitt"}},{"node":{"uuid":"masato-nishihara","name":"Masato Nishihara"}},{"node":{"uuid":"maria-clara","name":"Maria Clara"}},{"node":{"uuid":"nadieh-bremer","name":"Nadieh Bremer"}},{"node":{"uuid":"nobuhiko-sawai","name":"澤井宣彦"}},{"node":{"uuid":"nazanin-delam","name":"Nazanin Delam"}},{"node":{"uuid":"okuno-kentaro","name":"奥野 賢太郎"}},{"node":{"uuid":"praveen-yedidi","name":"Praveen Yedidi"}},{"node":{"uuid":"rowdy-rabouw","name":"Rowdy Rabouw"}},{"node":{"uuid":"shirley-wu","name":"Shirley Wu"}},{"node":{"uuid":"sho-miyamoto","name":"Sho Miyamoto"}},{"node":{"uuid":"sakakibara","name":"榊原昌彦"}},{"node":{"uuid":"sacha-greif","name":"Sacha Greif"}},{"node":{"uuid":"satoshi-ebihara","name":"海老原 圭吾"}},{"node":{"uuid":"samuel-agnew","name":"Samuel Agnew"}},{"node":{"uuid":"sam-bellen","name":"Sam Bellen"}},{"node":{"uuid":"satoshi-arai","name":"新井 智士"}},{"node":{"uuid":"toru-kobayashi","name":"Toru Kobayashi"}},{"node":{"uuid":"takuto-wada","name":"Takuto Wada"}},{"node":{"uuid":"tetsuharu-ohzeki","name":"Tetsuharu OHZEKI"}},{"node":{"uuid":"takeshi-kato","name":"加藤 健志"}},{"node":{"uuid":"yoshiki-shibukawa","name":"Yoshiki Shibukawa"}},{"node":{"uuid":"yosuke-furukawa","name":"Yosuke Furukawa"}}]},"allTalksYaml":{"edges":[{"node":{"uuid":"andy-hall","title":"Four Years of JS Procedural Generation","titleJa":"4年分のプロシージャルなJS","description":"Making things is hard. Why not make a *program* that makes things instead? That way you don't have to make the things, but things still get made. Easy!\n\nThis talk will be a brief tour of lessons learned from four years of JS procedural content generation. With forays into voxel terrain, image synthesis, and dynamic Web Audio music, it will focus on high-level techniques useful for all kinds of content, even far afield from game development.","descriptionJa":"やはりコンテンツを作るのは大変でしょ！　自分の代わりに作ってくれるプログラムを開発してみませんか？そしたら自分は作業しなくても、ほら！　あら簡単!\n\nこのセッションでは約４年間プロシージャルコンテンツと遊んできた私の経験を紹介します。ボクセル世界、画像合成、そして動的なWeb Audio音楽などに触れながら、ゲーム開発に限らず幅広く使える概念やテクニックなどをシェアします。","spokenLanguage":"ja","slideLanguage":"","speakerIDs":["andy-hall"],"startsAt":"14:45","endsAt":"15:15","room":"C","date":"day1"}},{"node":{"uuid":"andrew-betts","title":"Headers for Hackers","titleJa":"Headers for Hackers","description":"HTTP has been gradually adding lots of new and exotic headers, and more are on the way. Learn about current best practices with Vary, Link, Content-Security-Policy, Referrer-Policy, Client-Hints, Clear-Site-Data and Alt-Svc, upcoming features such as Feature-Policy and proposals like Variants, Early-Hints and Origin-Policy. HTTP gives you incredibly powerful control over many aspects of the way a browser will process the page, and is often a more effective or more secure option than trying to achieve the same effect with tags or script in the page.","descriptionJa":"HTTP は今まで様々な新しく独特な header を追加してきており、今もなお追加され続けています。\n\n現存している Header の Vary, Link, Content-Security-Policy, Referrer-Policy, Client-Hints, Clear-Site-Data and Alt-Svc のベストプラクティスや、\nこれから来る Feature-Policy や Variants, Early-Hints and Origin-Policy などの Proposal について学びましょう。\nHTTP はブラウザがどのようにページをプロセスするかにおいてとてもパワフルな制御が行うことができる上、同じ効果をページ上のタグやスクリプトで得るよりも効果的かつ安全に行えます。","spokenLanguage":"en","slideLanguage":"","speakerIDs":["andrew-betts"],"startsAt":"17:15","endsAt":"17:45","room":"A","date":"day1"}},{"node":{"uuid":"benjamin-gruenbaum","title":"Anatomy of a Click","titleJa":"Anatomy of a Click","description":"What actually happens when you click your mouse in your browser window?\n\nIn this talk you'll take a deep dive into how your web browser works and what actually happens when a mouse is clicked. You will also take a deep dive into what browsers do, how events work internally and why.\n\nBenjamin will go through how web automation tools like Puppeteer and Selenium simulate user actions, when that goes wrong and why.\n\nIdeally at the end of the talk you will have a much deeper understanding of how browsers dispatch events and could utilize that knowledge to write better front-end code.","descriptionJa":"ブラウザウィンドウ上でマウスをクリックしたとき、裏側では何がおこっているでしょう？\n\nこのトークでは、Web ブラウザがどのように動いているか、そしてマウスがクリックされたときに何が起こるのかについて、深く追求していきます。さらに、ブラウザが裏で何をしているか、内部でイベントはどう動いているのか、なぜそう動くのかについて話していきます。\n\nBenjamin は Puppeteer や Selenium のような Web 自動化ツールがどのようにユーザアクションを模倣するのか、どういうときに失敗するとか、なぜ失敗するのかについて話します。\n\nトークの終わる頃にはあなたブラウザがイベントをどのように発火しているかについてより深い知識を得ることができ、より良いフロントエンドのコードをかけるようになることを願っています。","spokenLanguage":"en","slideLanguage":"","speakerIDs":["benjamin-gruenbaum"],"startsAt":"16:00","endsAt":"16:30","room":"A","date":"day2"}},{"node":{"uuid":"claudia-hernandez","title":"npm i -g @next-and-beyond: Building the future of package management","titleJa":"npm i -g @next-and-beyond: Building the future of package management","description":"It’s been 10 years since it all started. Ten years of continuously improving and revolutionizing package management for the modern web. One million published packages later, the npm registry is the largest repository of open source ever. The public registry and its accompanying CLI are here to stay.\n\nYou always wanted to contribute but didn’t know where to start? This is your talk! Let’s demystify the npm CLI, walk through it’s most hairiest bits and pieces, and chat about what’s coming up. With v7 and v8 on the works, the future looks promising: workspaces, first-class support for symbolic links, yarn.lock compatibility, performance and speed upgrades,  tink (a package unwinder for JS) and more are only but a few of the exciting new changes you can help us build!","descriptionJa":"すべては１０年前にはじまった。１０年間、モダン Web の為の package management を改善し、変革を起こしてきた。publish された package は１００万を超え、今では npm registry は世界最大のオープンソースの為のリポジトリとなった。パブリックレジストリとその為の CLI は我々と共にある。  どこからコントリビュートすればいいかわからない？このトークはあなたにピッタリだ。npm CLI の謎を解き明かし、npm の今後について語ろう。npm v7 と v8 では workspaces, first-class support for symbolic links, yarn.lock 互換性、パフォーマンスと速度改善、tink (JS の package unwinder)などなど、様々な追加があり、これはまだ序の口だ。他にもエキサイティングな変更が待っている、それを自分たちの手で作っていこう！","spokenLanguage":"en","slideLanguage":"","speakerIDs":["claudia-hernandez"],"startsAt":"13:30","endsAt":"14:00","room":"B","date":"day2"}},{"node":{"uuid":"day1-break-A-12:00","title":"Open","titleJa":null,"description":null,"descriptionJa":null,"spokenLanguage":null,"slideLanguage":null,"speakerIDs":[],"startsAt":"12:00","endsAt":"13:00","room":"A","date":"day1"}},{"node":{"uuid":"day1-break-A-13:00","title":"Opening talk","titleJa":null,"description":null,"descriptionJa":null,"spokenLanguage":null,"slideLanguage":null,"speakerIDs":[],"startsAt":"13:00","endsAt":"13:30","room":"A","date":"day1"}},{"node":{"uuid":"day1-break-A-14:00","title":"Break","titleJa":null,"description":null,"descriptionJa":null,"spokenLanguage":null,"slideLanguage":null,"speakerIDs":[],"startsAt":"14:00","endsAt":"14:15","room":"A","date":"day1"}},{"node":{"uuid":"day1-break-A-15:15","title":"Break","titleJa":null,"description":null,"descriptionJa":null,"spokenLanguage":null,"slideLanguage":null,"speakerIDs":[],"startsAt":"15:15","endsAt":"15:30","room":"A","date":"day1"}},{"node":{"uuid":"day1-break-A-16:30","title":"Break","titleJa":null,"description":null,"descriptionJa":null,"spokenLanguage":null,"slideLanguage":null,"speakerIDs":[],"startsAt":"16:30","endsAt":"16:45","room":"A","date":"day1"}},{"node":{"uuid":"day1-break-A-17:45","title":"Break","titleJa":null,"description":null,"descriptionJa":null,"spokenLanguage":null,"slideLanguage":null,"speakerIDs":[],"startsAt":"17:45","endsAt":"18:15","room":"A","date":"day1"}},{"node":{"uuid":"dynamis","title":"License violation of React Applications","titleJa":"React アプリのライセンス違反について","description":"Hi React app creators, are you sure your React applications don't violate license of React or dependent modules? Do you know if you are creating apps with CRA (Create React App), you will violate licenses of React by default? I'll talk about license notice problems and it's solutions.","descriptionJa":"React アプリ作者の皆さん、React や依存モジュール群のライセンスに違反してない自信はありますか？CRA (Create React App) でアプリを作るとデフォルトで React のライセンス違反になってしまっているのはご存じですか？React のライセンス表記問題と解決策についてお話しします。","spokenLanguage":"ja","slideLanguage":"","speakerIDs":["dynamis"],"startsAt":"19:25","endsAt":"19:35","room":"A","date":"day1"}},{"node":{"uuid":"day1-break-A-19:35","title":"Party","titleJa":null,"description":null,"descriptionJa":null,"spokenLanguage":null,"slideLanguage":null,"speakerIDs":[],"startsAt":"19:35","endsAt":"21:00","room":"A","date":"day1"}},{"node":{"uuid":"day2-break-A-10:00","title":"Open","titleJa":null,"description":null,"descriptionJa":null,"spokenLanguage":null,"slideLanguage":null,"speakerIDs":[],"startsAt":"10:00","endsAt":"11:00","room":"A","date":"day2"}},{"node":{"uuid":"dominic-tarr","title":"Life of Streams","titleJa":"ストリームの人生","description":"A reflection on his work on evolving streams.","descriptionJa":"Stream システム改善の反映について","spokenLanguage":"en","slideLanguage":"","speakerIDs":["dominic-tarr"],"startsAt":"11:30","endsAt":"12:00","room":"A","date":"day2"}},{"node":{"uuid":"day2-break-A-12:00","title":"Break","titleJa":null,"description":null,"descriptionJa":null,"spokenLanguage":null,"slideLanguage":null,"speakerIDs":[],"startsAt":"12:00","endsAt":"13:00","room":"A","date":"day2"}},{"node":{"uuid":"day2-break-A-14:00","title":"Break","titleJa":null,"description":null,"descriptionJa":null,"spokenLanguage":null,"slideLanguage":null,"speakerIDs":[],"startsAt":"14:00","endsAt":"14:15","room":"A","date":"day2"}},{"node":{"uuid":"day2-break-A-15:15","title":"Break","titleJa":null,"description":null,"descriptionJa":null,"spokenLanguage":null,"slideLanguage":null,"speakerIDs":[],"startsAt":"15:15","endsAt":"15:30","room":"A","date":"day2"}},{"node":{"uuid":"day2-break-A-16:30","title":"Break","titleJa":null,"description":null,"descriptionJa":null,"spokenLanguage":null,"slideLanguage":null,"speakerIDs":[],"startsAt":"16:30","endsAt":"16:45","room":"A","date":"day2"}},{"node":{"uuid":"day2-break-A-17:45","title":"Break","titleJa":null,"description":null,"descriptionJa":null,"spokenLanguage":null,"slideLanguage":null,"speakerIDs":[],"startsAt":"17:45","endsAt":"18:00","room":"A","date":"day2"}},{"node":{"uuid":"day2-break-A-19:00","title":"Closing","titleJa":null,"description":null,"descriptionJa":null,"spokenLanguage":null,"slideLanguage":null,"speakerIDs":[],"startsAt":"19:00","endsAt":"19:30","room":"A","date":"day2"}},{"node":{"uuid":"eiji-kitamura","title":"Building secure and seamless sign-in experience using WebAuthn","titleJa":"WebAuthnで実現する安全・快適なログイン","description":"WebAuthn is a browser API that enables strong authentication using public key based cryptography. In this session we will walk through basics of WebAuthn and how it works. Then we'll cover how to build a user experience that enables users to sign-in with a second factor or to re-authenticate them to a website using biometrics.","descriptionJa":"WebAuthn は公開鍵暗号をベースとした強固な認証を行えるブラウザの API です。このセッションでは、WebAuthn の基本に加え、二要素認証、または生体情報などを使った再認証をウェブサイト上で実現する方法について解説します。","spokenLanguage":"ja","slideLanguage":"","speakerIDs":["eiji-kitamura"],"startsAt":"14:15","endsAt":"14:45","room":"B","date":"day1"}},{"node":{"uuid":"fuji-goro","title":"How to Boost Your Code with WebAssembly","titleJa":"How to Boost Your Code with WebAssembly","description":"WebAssembly is an executable format written in binary. It's known to reduce the duration of parsing, and its execution time is much faster compared to JavaScript. However, it also has many limitations.\n\nRecently, I've been hearing from many people wanting to write, or has been writing part of their code in WebAssembly to improve with performance.\n\nIs such a magical feature actually possible? How hard it is to accomplish? How much change will it make? I will report what I have learned from my experience of actually writing WebAssembly.","descriptionJa":"WebAssemblyはバイナリ表現の実行可能形式です。JavaScriptと異なり、パースの時間を短縮できることや実行が高速であることがメリットとされていますが、制約も大きく扱いの難しい技術です。\n\nそんな中、「コードの一部をWebAssemblyで書いて高速化」ということをした、あるいはしたい、という話をしばしば目にするようになってきました。\n\nそんな夢のようなことが本当にできるのか、できるとしたらどのくらいの難易度で、どのくらいの効果があるのか。実際にやってみた結果を報告します。","spokenLanguage":"ja","slideLanguage":"","speakerIDs":["fuji-goro"],"startsAt":"16:00","endsAt":"16:30","room":"B","date":"day1"}},{"node":{"uuid":"fred-schott","title":"Pika: Reimagining the Registry","titleJa":"Pika: レジストリの再創造","description":"What if you could do web development today without a bundler?\n\nThis talk explores the good, the bad and the ugly of modern JavaScript development. Learn how Node.js, npm, React, Browserify and Webpack all influenced JavaScript's tooling-heavy evolution over the last decade. Then, look towards the future at how projects like Pika (www.pika.dev) are reimagining web development for 2019 and beyond. Finally, learn how you can start to leverage these modern projects today for faster, smaller, and less complex JavaScript applications.","descriptionJa":"もし、今 Web の開発を Bundler 無しで行えるとしたら？\n\nこのトークではモダンな JavaScript 開発の良いところ、悪いところ、そして汚いところについて話します。この 10 年間、Node.js, npm, React, Browserify, そして Webpack がそれぞれ現在の JavaScript のツールに依存した進化にどのように影響してきたのか。そして、Pika (www.pika.dev) によって未来の Web 開発がどのようになっていくのか。そして最後に、今のモダンなプロジェクトから離れより速く、より小さく、そしてより簡潔な JavaScript アプリを作っていくにはどうしたら良いのか。","spokenLanguage":"en","slideLanguage":"","speakerIDs":["fred-schott"],"startsAt":"17:15","endsAt":"17:45","room":"A","date":"day2"}},{"node":{"uuid":"guillermo-rauch","title":"Building and Deploying for the Modern Web with JAMstack","titleJa":"Building and Deploying for the Modern Web with JAMstack","description":"What does it take to build and deploy a cutting-edge website? This talk will discuss the spectrum of complexity of the modern web: from single page apps to multiple pages, from static websites to fully dynamic ones, from the frontend to the backend with serverless lambda functions. We will discuss how to bring your app code alive with preview deployments for every push, how to maximize performance and availability with a global CDN, how to go to production (and revert it) faster than ever before and how to improve QA and testing to build the most reliable and robust experiences.","descriptionJa":"最先端のウェブサイトをビルドしてデプロイするのには何が必要だろうか？ このトークでは、モダンな Web について、SPA から Multi Page のサイト、静的ウェブサイトから動的ウェブサイト、フロントエンドからサーバーレス Lambda を使ったバックエンドまで、様々な角度から見ていきます。Push する毎にデプロイのプレビューが見れる方法や Global CDN を使ったパフォーマンスと可用性の最大化、最速で Production に Push する方法（そして、どうやって Revert するか）について、そして QA とテストの質を上げより強固で信頼できる Web 体験を与える方法について発表します。","spokenLanguage":"en","slideLanguage":"","speakerIDs":["guillermo-rauch"],"startsAt":"15:30","endsAt":"16:00","room":"A","date":"day1"}},{"node":{"uuid":"ginpei-takanashi","title":"Starting TypeScript Leaving JavaScript as JS","titleJa":"JavaScriptのままでTypeScriptを始める","description":"When you use `--allowJs` and `--checkJs` option for typescript, you can run `tsc` while having `*.js` files. This talk will be about being able to work on projects with some type safety, for small projects or projects that cannot convert to typescript for what ever circumstances.","descriptionJa":"TypeScript の --allowJs と --checkJs オプションを使うと *.js のまま tsc で型検証ができるので、コンパイルを開発手順に含めずに JS をそのまま扱う小さなプロジェクトや、あるいは導入できないあれやこれやの事情があっても型の恩恵に預かれる、という話をしたいです。","spokenLanguage":"ja","slideLanguage":"","speakerIDs":["ginpei-takanashi"],"startsAt":"14:45","endsAt":"15:15","room":"C","date":"day2"}},{"node":{"uuid":"henry-zhu","title":"Defining Open Source","titleJa":"「オープンソース」の定義","description":"Why is open source important? We all rely on it, whether we know it or not (programmer or not). And yet it's hard to grasp what it really represents: is it about the freedom of code, about giving freely in service of the greater community, or just whatever we want? I'd like to present some thoughts about the current status of this term, what maintainers actually do, and an idea of a future that still has open source.","descriptionJa":"オープンソースはなぜ大事なのか？我々はみんな知らずともその恩恵を受けている。プログラマーであるかどうかは関係なしに。しかし、オープンソースが本来どういうものなのかを把握するのは難しい。\nコードの自由なのか？大きなコミュニティに無償で提供することなのか？それとも我々は好きにすればよいのか？オープンソースという言葉の現状について、そしてメンテナーは実際何をしているのか、そしてオープンソースの未来はどうなっていくのか、私が思うところについて発表します。","spokenLanguage":"en","slideLanguage":"","speakerIDs":["henry-zhu"],"startsAt":"14:45","endsAt":"15:15","room":"A","date":"day1"}},{"node":{"uuid":"hidetaka-okamoto","title":"Build and scale multiple Voice application by using TypeScript","titleJa":"Build and scale multiple Voice application by using TypeScript","description":"We can build own voice application by using Node.js and TypeScript.\nAnd many people are starting development or publishing their own application.\nBut there are few contents to manage and maintain the several application source code.\n\nToday, I will talk about how to maintain several VUI application by a single repository.\n\n# Keywords\n- ask-sdk-model\n- Serverless Framework\n- SAM\n- AWS CDK\n- Lerna","descriptionJa":"Alexaのような音声アプリケーションもNode.jsで開発することができます。\n個人で簡単に開発をはじめることができますが、まだ複数のアプリケーションを管理する方法についてはまだあまり国内で話題になっていません。\n\n今回は１つのコードベースを元に５つ以上のスキルを公開・アップデートするという取り組みを行うなかで気づいた点やTypeScriptを利用することで得られる恩恵などについて紹介します。\n\n# Keywords\n- ask-sdk-model\n- Serverless Framework\n- SAM\n- AWS CDK\n- Lerna","spokenLanguage":"ja","slideLanguage":"","speakerIDs":["hidetaka-okamoto"],"startsAt":"11:30","endsAt":"12:00","room":"C","date":"day2"}},{"node":{"uuid":"irina-shestak","title":"JavaScript, Rust and Wasm Walk into a Ramen Shop ...","titleJa":"JavaScript, Rust and Wasm Walk into a Ramen Shop ...","description":"So you heard you can run WebAssembly in the browser, but what does this look like IRL? Seeking the much talked about performance benefits of running Wasm in the browser, Compass (GUI for MongoDB) took the great leap forward and rewrote part of the application -- a schema parser responsible for document analysis -- in Rust. As it turns out, the rumours are true, I repeat the rumours are true: offloading parts of your application to Rust makes it fast, and in some of our cases, heaps fast.\n\nIn this talk I will cover converting a part of an codebase from JavaScript to Rust, bringing it to Electron, adding Wasm to an existing React app, and deploying this whole lot to production. As Compass still talks to MongoDB via Node.js, I will also cover how we used Rust to improve performance without losing data integrity. This talk is about a success story, but also about a bunch of smol mishaps, fun woopses and lil' dead ends we encountered and how we managed to overcome along the way.","descriptionJa":"WebAssembly がブラウザで動くのはご存知かとおもいます。しかし、実際にはどういったものなのでしょう？ 世に溢れてる Wasm によるブラウザのパフォーマンス改善を読み解き、Compass (MongoDB 用の GUI)は大きな一歩を踏み出し、アプリの一部 - ドキュメント検証のためのスキーマパーサ - を Rust に書き換えました。結果、噂は本当でした、大事なことなので二回言います、噂は本当でした！アプリの一部を Rust に置き換えることはパフォーマンス改善に大きく繋がります。ときには、heap も高速化します。\n\nこのトークでは、JavaScript で書かれたアプリの一部を Rust に書き換え、Electron に持っていき、既存の React アプリに Wasm を組み込み、それをプロダクションに持っていくことについて話します。Compass の MongoDB との接続部分は Node.js で動いているので、どの様にデータの整合性を保ったまま Rust を使いパフォーマンスを改善したのかについても話します。このトークはサクセスストーリーですが、その裏で起きた細かいハプニングや、うっかりや行き詰まり、そしてそこをどう乗り越えたまでを公開します。","spokenLanguage":"en","slideLanguage":"","speakerIDs":["irina-shestak"],"startsAt":"13:30","endsAt":"14:00","room":"A","date":"day2"}},{"node":{"uuid":"jorge-bucaran","title":"Write What Not How","titleJa":"Write What Not How","description":"Declarative UIs are on the rise. React, SwiftUI, Jetpack Compose, Elm, Hyperapp. But  what about declarative state management, side effects, and events? In this session I'll show you what purely functional, declarative apps look like.","descriptionJa":"React、SwiftUI、Jetpack Composeなどの宣言的UIが増えています。 でもState管理、副作用、イベントについてはどうでしょうか。 このセッションでは、純粋関数型プログラミングの宣言的アプリが、どいうものかを紹介します。","spokenLanguage":"en/ja","slideLanguage":"","speakerIDs":["jorge-bucaran"],"startsAt":"16:00","endsAt":"16:30","room":"A","date":"day1"}},{"node":{"uuid":"jennifer-wong","title":"Time Is But an Illusion… in JavaScript","titleJa":"時間はただの幻想である… JavaScriptにおいては","description":"Time in JavaScript is weird. But why is time so terrible in JavaScript? Why do we need libraries like Moment.js? And what exactly are Greenwich Mean Time and Coordinated Universal Time.\n\nWith so much to worry about timing wise: formatting, time zones, internationalization, recurrence rules, leap years, daylight savings time, and more, everyone needs HELP!\n\nLet’s turn time into money by taking a look at the most popular time libraries and how we use them to solve JavaScript’s time problems. We’ll look at how JavaScript’s Date object started and what its prototype allows. We’ll wind our way through dates, times, and standards to find solutions to the weirdness.\n\nLet’s kill time together talking about JavaScript time! Because we know, time heals all.","descriptionJa":"JavaScript における時間の扱いは少々特殊です。なぜ JavaScript の時間はこんなにも扱いにくいのだろう？ なぜ、Moment.js のようなライブラリが必要なんだろう？ Greenwich Mean Time と Coordinated Universal Times とは一体なんなんだろう？\n\nフォーマッティング、タイムゾーン、i18n 対応、繰り返し設定、うるう年、サマータイム、などなど、時間については全人類悩んでいます！\n\n時は金なりです。時間を扱うポピュラーなライブラリを使って、私達が JavaScript の時間問題をどう解決していっているかについて話します。JavaScript の Date object がどう始まったかについて、そしてその prototype で何が出来るかについて見ていきます。時のねじれを読み解き、日付や時間の対処法を見つけていきます。\n\nJavaScript の時間について話して時間を潰しましょう！なぜなら時間はすべてを解決してくれるから。","spokenLanguage":"en","slideLanguage":"","speakerIDs":["jennifer-wong"],"startsAt":"11:00","endsAt":"11:30","room":"A","date":"day2"}},{"node":{"uuid":"jxck","title":"Whole volume of Web","titleJa":"Web の体積","description":"Web continues to be Large. but how ? why ? still continue ? it's really fine ?\nis there any way to handle it ? or not ?","descriptionJa":"Web は非常に「大きく」なった\nじゃあどのくらい大きくて、なぜそうなったのか\nこのまま大きくなり続けていいのか\n人類はその大きさについていけるのか\n\n小さくできるとしたら、方法はあるだろうか？","spokenLanguage":"ja","slideLanguage":"","speakerIDs":["jxck"],"startsAt":"13:00","endsAt":"13:30","room":"A","date":"day2"}},{"node":{"uuid":"jarrod-overson","title":"Analysis of an exploited npm package","titleJa":"悪用された npm パッケージの分析","description":"How did 8 million developers download malicious code with no one noticing?\n\nIn late 2018, a popular node.js package changed ownership. This package became the delivery mechanism for malicious code that traversed through multiple environments to inject its final payload into a mobile application. This exploit existed in the wild for 48 days and was downloaded over 8 million times before it was found. How was it found? What was its purpose and how did it happen in the first place?\n\nThis exploit is one example of a well-planned, sophisticated attack that targeted the most valuable and privileged computers in a company, development and build machines. In this session we will dive into how the attack happened, the three payloads, how they worked, how they were obfuscated, and what their goal ultimately was.\n\nThis is not node/npm specific and any public repository of source code is vulnerable. This is a growing risk that many companies are absorbing without fully understanding and, without better management, will inevitably lead to incredible exploits in the future.","descriptionJa":"悪意あるコードは 800 万人もの開発者の目をすり抜けてどうダウンロードされてしまったのか？\n\n2018 年の終わり頃、ある node.js のパッケージのオーナーシップが譲渡されました。そのパッケージは複数の環境下を横断し、最終的にモバイルアプリまでの経路を司る悪意のあるパッケージとなりました。この搾取は 48 日間続き、見つかるまでに 800 万件以上のダウンロードが行われました。どう発見されたのか？何が目的だったのか？そしてどうして起こってしまったのか？\n\nこれは良く計算、洗練された、会社の最も大事なシステムや開発、ビルドマシンが狙われた攻撃の一つの例です。このセッションではこの攻撃がどう行われたか、３つの Payload がどう動いていたか、それがどう難読化されていたか、そしてそれが何を目的としていたかについて発表します。\n\nこれは node/npm に限った話ではなく、パブリックなソースコードのリポジトリ全てで起こりうることです。これは多くの会社が全てを理解しないまま抱えている、今もなお育っているリスクであり、マネジメントしていかなければ、今後さらなる被害を与えかねません。","spokenLanguage":"en","slideLanguage":"","speakerIDs":["jarrod-overson"],"startsAt":"14:45","endsAt":"15:15","room":"A","date":"day2"}},{"node":{"uuid":"jonny-kalambay","title":"Discovering Animals with AI and Javascript","titleJa":"AIとJavaScript による生物認識","description":"Learn how to identify objects and animals using machine learning and Javascript, with a practical example. Here's what we will go over:\n\n- Quick introduction to machine learning\n- How it can be done on the mobile browsers with Tensorflow JS\n- Walkthrough of building a dog-identification app\n- Advanced machine learning practices\n- Performance considerations\n\nA little bit of Javascript experience is preferred, but developers of all levels can learn from this talk!","descriptionJa":"このプレゼンテーションでは、実用例でJavascriptとマシーンラーニングで生き物の種類を認識する方法を紹介します。\n\nプレゼンテーションの５つのポイント：\n- マシンラーニングの基本\n- Tensorflow JS と携帯のブラウザを使いその過程を作成する\n- 簡単な犬の種類を認識するアプリを開発する方法\n- マシンラーニングの高度な概念\n- パフォーマンス考慮事項.\n\n経験がある全レベルのJavascript開発者の方が対象です。","spokenLanguage":"en","slideLanguage":"","speakerIDs":["jonny-kalambay"],"startsAt":"16:45","endsAt":"17:15","room":"A","date":"day2"}},{"node":{"uuid":"kitson-kelly","title":"Deno - A new way to JavaScript","titleJa":"Deno - JavaScript の新たな道筋","description":"Deno is a secure TypeScript/JavaScript runtime built with Rust and V8.  In this talk we will discuss the brief yet interesting history of Deno so far, the current state of the project, some of the design decisions and architecture, as well as provide a live demonstration.","descriptionJa":"Deno は Rust と V8 でビルドされたセキュアな TypeScript/ JavaScript のランタイムです。この発表では、Deno の簡潔な、それでいて興味深い歴史と、Deno の現状、そして Deno のデザイン設計や構造について、ライブデモ込みで話していきます。","spokenLanguage":"en","slideLanguage":"","speakerIDs":["kitson-kelly"],"startsAt":"16:45","endsAt":"17:15","room":"A","date":"day1"}},{"node":{"uuid":"kohei-kido","title":"IoT development with modern web technologies","titleJa":"最新のWeb技術でIoT開発をする","description":"JavaScript can be used various cases, like HTML dynamically from the client side, or handle computations on server side.\nWhat it can also do is to manipulate physical things in \"real side\" such as motors and sensors. With the power of JavaScript, we are able to express things beyond what is being displayed on the screen , and get current state of real life such as getting the number of people in a room.\n\nIn this session, you will learn about \"real side\" development in JavaScript. What tools can be used, and what can be done with it.","descriptionJa":"JavaScriptはクライアントサイドでHTMLを動的に動かしたり、サーバーサイドとして様々な処理をしたりすることができますが、リアルサイドとして現実世界のモーターやセンサなどの\"もの\"を制御することもできます。リアルサイドでもJavaScriptを使うことで、ディスプレイの枠にとらわれない表現方法が可能になったり、部屋に人がいるかなどの現実の状態を取得する事が可能になったりと、できることがまた一段と広がります。 本セッションではJavaScriptでのリアルサイドについて、どんな技術選択肢があるかから扱う方法、どういったものが作れるか等についてお話します。","spokenLanguage":"ja","slideLanguage":"","speakerIDs":["kohei-kido"],"startsAt":"17:15","endsAt":"17:45","room":"C","date":"day2"}},{"node":{"uuid":"lena-morita","title":"Awakened by Accessibility","titleJa":"覚醒するアクセシビリティ","description":"How did discovering the principles of accessibility make me realize that I was born to build things for the web?\n\nWhether you have no idea what accessibility is, or you do but never seem to have time for it, let’s first contemplate on what the web actually is, and we’ll likely come out with an irresistible urge to build an accessible web.","descriptionJa":"どんなエンジニアになろうか決めかねていた自分が、ある日突然「私はウェブをやるために生まれてきた」と思うに至った、アクセシビリティの話です。\n\n「アクセシビリティって何？」という人から、「大事なのはわかっているけどいつも後回しにしてしまう」という人まで、明日からアクセシブルな実装をせずにはいられない、ウェブの本質に迫ります。","spokenLanguage":"ja","slideLanguage":"","speakerIDs":["lena-morita"],"startsAt":"14:45","endsAt":"15:15","room":"B","date":"day1"}},{"node":{"uuid":"martin-splitt","title":"Technical SEO for JavaScript developers","titleJa":"JS開発者のためのSEOテクニック","description":"I am sick and tired of SEOs, marketing folks and developers spreading fear, uncertainty and doubt about SEO and JavaScript.\n\nIn this talk I want to give web developers a sound understanding of how Googlebot and other crawlers see your content and what are common pitfalls to avoid.\n\nWe will look into\n\n- How crawlers find and index your content\n- What works and what doesn’t\n- Common misconceptions and mistakes and how to avoid them\n- Debugging tools and techniques to make sure people can find the things you put on the web","descriptionJa":"もうつかれた。SEO にもマーケティングにも開発者が SEO と JavaScript について不安や疑惑を抱いていることについてもこりごりだ。\n\nこのトークでは Web 開発者に向けて、Googlebot や他の Crawler があなたのコンテンツをどう見ているか、そしてよくある落とし穴をどう避けるかについて、わかりやすく説明する。\n\n以下のことについて語っていく。\n\n- Crawler があなたのコンテンツをどう見て index するか。\n- 何が動いて何が動かないのか。\n- よくあるミスや勘違いとそれらの対処法。\n- あなたが Web 上に上げたものを他の人が見つかる様にするデバッグツールやテクニック。","spokenLanguage":"en","slideLanguage":"","speakerIDs":["martin-splitt"],"startsAt":"15:30","endsAt":"16:00","room":"C","date":"day1"}},{"node":{"uuid":"maria-clara","title":"You might also like...","titleJa":"You might also like...","description":"Think about Netflix, Spotify or your favorite e-commerce, a lot of content we consume and products we buy come from recommendations made by machines. recommender systems, the mechanism behind those machines have become increasingly popular over the past years to help us cope with information overload.\n\nIn this talk, I present how to leverage graph theory to build your own recommender system with JavaScript.","descriptionJa":"Netflix や Spotify、それかあなたの好きな E コマースサイトを想像してみてください。我々が購入するコンテンツやプロダクトの多くは機械が作成したおすすめから来ているものです。おすすめシステム、そしてその裏側で動いているメカニズムは近年多くの注目を浴びてきており、情報過多な現代を乗り越えるのに役立っています。\n\nこのトークでは、グラフ理論を用いて、JacaScript で自分だけのおすすめシステムを作成する方法について発表します。","spokenLanguage":"en","slideLanguage":"","speakerIDs":["maria-clara"],"startsAt":"16:45","endsAt":"17:15","room":"C","date":"day1"}},{"node":{"uuid":"maxi-ferreira","title":"Cache Me If You Can","titleJa":"Cache Me If You Can","description":"Web caching is one of the most powerful techniques you can use to improve the performance of your websites. But like with many other optimization methods, it's not always clear where to start. When should you cache your resources? For how long? And how do you invalidate them? It can be an intimidating subject; but fear not, understanding its fundamentals is surprisingly simple.  In this talk, I will walk you through the basics of HTTP Caching: how it works, how to manage it, and how to implement simple but effective strategies that will make your sites faster, leaner, and more responsive.","descriptionJa":"Web キャッシュは Web サイトのパフォーマンスを改善する最もパワフルなテクニックの一つです。しかし、他のパフォーマンス改善メソッドのように、どこから始めればいいのかがわかりにくいこともあります。どの段階でリソースのキャッシュを行えばいいのか？いつまで持っていればいいのか？どうやって無効にするのか？複雑さに威圧されてしまうかもしれません。でも安心してください、基本を理解すれば驚くほど単純です。このトークでは、HTTP キャッシュの基本について案内します。どういうものなのか、どう管理するのか、あなたのサイトをより高速、より軽く、よりレスポンシブにする単純かつ効果的な導入方法について発表します。","spokenLanguage":"en","slideLanguage":"","speakerIDs":["maxi-ferreira"],"startsAt":"19:05","endsAt":"19:15","room":"A","date":"day1"}},{"node":{"uuid":"masashi-ganeko","title":"Build tiny node.js - WASM/WASI compiler using node.js","titleJa":"Node.js でつくる Node.js - WASM/WASI ミニミニコンパイラー","description":"This is the continuation of last year's session, \"Build Node.js mini-interpreter and mini-compiler\". To learn WASM, I've built a tiny WASM compiler using Node.js. \nI would like to talk about some difference between WASM and LLVM, and my small challenge for supporting WASI runtime.","descriptionJa":"昨年のセッション「Node.jsでつくるNode.js ミニインタープリター/コンパイラー」の続編です。WASMを学ぶために、Node.jsでミニミニWASMコンパイラーを作ってみました。LLVMとの仕組みの違いや、ちょっとだけWASIを間見た話をお伝えします。","spokenLanguage":"en","slideLanguage":"","speakerIDs":["masashi-ganeko"],"startsAt":"19:15","endsAt":"19:25","room":"A","date":"day1"}},{"node":{"uuid":"masato-nishihara","title":"","titleJa":"正攻法はあるのか !? 泥臭く戦った Node.js バージョンアップ一部始終","description":"","descriptionJa":"BtoBtoC Web チャットシステム（SaaS）のチャットディーラー。（https://www.chatdealer.jp/） 先日、EOL を迎えることになった Node.js の 6 系をバージョンアップすることになりました。 社内での知見は無く、初めての試みとなりました。 今後の EOL サイクルを考え 8 系ではなく一気に 10 系にすることに決まりましたが、 新人の頃から独学で Node.js と付き合ってきた私はバージョンアップに関する正攻法がわからないまま手探りで進めていくことに… モジュールのバージョンアップで苦労したり、全機能テストを複数回実施するなど泥臭い作業の果てに、 何とかリリースまでたどり着き一安心かと思った矢先にトラブルが発生。 トラブル対応している中で Node.js についてコアの livuv を調べるなど、より詳しくなる機会がありました。 そんな Node.js バージョンアップでの奮闘内容をお話したいと思います。","spokenLanguage":"ja","slideLanguage":"","speakerIDs":["masato-nishihara"],"startsAt":"13:00","endsAt":"13:30","room":"C","date":"day2"}},{"node":{"uuid":"masato-ohba","title":"Migration from React Native to PWA","titleJa":"Migration from React Native to PWA","description":"## Target Audience\n\n- Developers who are thinking of developing multi platform applications in a cross platform development framework.\n- Developers who have been creating and maintaining Native Apps without the use of Native Language, and are thinking of migrating.\n- No experience of React Native Required.\n\n## Talk Overview\n\nIn the past few years, there has been cases of companies starting to write their applications in React Native, or companies like AirBnB switching from React Native to Native Language. There are also ongoing debates about \"React Native vs PWA\" and \"React Native vs Swift/Kotlin\". However, there aren't many examples of migrating React Native app to PWA.\n\nIn this talk, he will be presenting a case study of a project that has migrated from application made with React Native to PWA. Especially, the difference between \"can be devleoped\" and \"can be maintained\" and its hardship, as well as realization of good developer experience by building in web platform.\n\nThere are some project specific details in this use case, but the basic outline will be the following:\n\n- Background behind the decision of switching from React Native app to PWA\n- What was done to make the migration\n- What he has learned from developing and maintaining applications in the following pattern:\n  - React Native app that has support for both iOS and Android\n  - PWA/Hybrid app that has support for iOS/Android/Web","descriptionJa":"## 対象とする聞き手\n- クロスプラットフォーム開発フレームワークによるアプリ開発やマルチプラットフォーム対応を考えている方\n- すでにネイティブ言語以外でのネイティブアプリ開発・運用をしており、マイグレーションを考えている方\n- React Nativeの利用経験は問いません\n\n## トークの内容\nここ数年でReact Nativeの導入・運用事例や、Airbnbの例に代表されるようにReact Nativeアプリをネイティブ言語で刷新する事例も耳聞するところとなりました。また、そうした時流での技術選定について「React Native VS PWA」「React Native VS Swift/Kotlin」のような二項対立で評価が行われることもあります。しかし、React NativeからPWAへと移行した事例について聞くことは多くありません。\n\nこのトークは、React Nativeで作られたアプリをPWAとして刷新したプロジェクトの事例を通じて得られた知見について話すケーススタディです。具体的には「\"開発できる\"は\"運用できる\"を意味しない」という辛みと、改めて気づく「Webというプラットフォームの開発体験の良さ」が軸になる予定です。\n\n同アプリが業務システムであることなど固有の事情もこの事例では含みますが、発表を通じて以下のことをお伝えします。\n\n- React Native appからPWAに移行するに至った経緯、技術選定\n- 移行において工夫したこと\n- 以下の2パターンのアプリケーションの開発・運用で学んだこと\n  - iOS/Android両プラットフォーム対応しているReact Native app\n  - iOS/Android/Webの3つのプラットフォームに対応するPWA/Hybrid app","spokenLanguage":"ja","slideLanguage":"","speakerIDs":["masato-ohba"],"startsAt":"13:30","endsAt":"14:00","room":"C","date":"day2"}},{"node":{"uuid":"mariko-kosaka","title":"points at random","titleJa":"points at random","description":"Musings on art, computing, relationship, and community","descriptionJa":"アートとコンピューティング、関わり方とコミュニティ","spokenLanguage":"en/ja","slideLanguage":"","speakerIDs":["mariko-kosaka"],"startsAt":"18:30","endsAt":"19:00","room":"A","date":"day2"}},{"node":{"uuid":"nadieh-bremer","title":"Visualizing Connections","titleJa":"「繋がり」の可視化","description":"Connections are a part of us, of the world. From the connections between people, between cultures, within language, and more. In these days when more data is collected daily than we could ever hope to explore, the variety in connections being gathered is opening up the possibility to visualize these (often complex) networks.\nDuring this talk, Nadieh will take you through the design process of several of her (interactive) data visualization works, from personal projects to client work. The common thread they all share, is that they all reveal connections, but all differently. From a family tree of 3000 people connected to the European Royal houses, to those existing between our Intangible Cultural Heritage created for UNESCO, to connections we have drawn in the night skies and more. Revealing that all types connections are unique and revealing the intricacies that lie within them requires a creative, iterative and custom approach.","descriptionJa":"「繋がり」と言うのは我々の一部であり、世界の一部でもあります。人と人、文化間の繋がり、言語の繋がりなど様々です。我々が探求しきれないほどのデータが日常的に集まるこの現代において、発見されていく新たな繋がりは、ときには複雑なネットワークであっても可視化できる可能性を秘めています。\n\nこの発表では、Nadieh が作成した個人制作からクライアントとの作品まで、数々のインタラクティブなデータビジュアリゼーション作品におけるデザインプロセスについて話していきます。\nこれらの作品に共通していることは、これらが様々な「繋がり」を様々な方法で表していると言うこと。3000 人からなるヨーロッパ貴族の家系の繋がりや、UNESCO の様々な文化遺産の間にある繋がり、我々が夜空に描いた星々の繋がりなど。全ての繋がりは独特であり、その複雑さを解きほぐすにはクリエイティブな、反復的、かつ特殊なアプローチが必要なのです。","spokenLanguage":"en","slideLanguage":"","speakerIDs":["nadieh-bremer"],"startsAt":"14:15","endsAt":"14:45","room":"A","date":"day1"}},{"node":{"uuid":"nazanin-delam","title":"Web Accessibility in a Nutshell","titleJa":"Web Accessibilityのすゝめ","description":"The internet is changing the way all of us are living, and Web applications should spark joy for everyone with any capabilities. How would you develop your website, if you knew all the people in Europe are not able to use it? Would you prioritize accessibility?\n\nIn this talk, I will go through best practices to create accessible UI components both in design and implementation and see how Netflix pioneers accessibility on its signup flow.","descriptionJa":"人生は変化の連続であるように、インターネットもまた常に変化の連続である。Web アプリはどんな背景がある人でも「ときめき」を感じれるものでありたい。もし、ヨーロッパの人はこのサイトを使えないとわかっていたら、あなたならどのようにサイトを設計する？あなたはアクセシビリティを優先するだろうか？\n\nこのトークでは、UI のアクセシビリティ対応のベストプラクティスについて、デザイン観点と実装の観点から見ていきます。Netflix がアクセシビリティの先駆者としてどのようなサインアップのフローを設計しているかを伝えていきます。","spokenLanguage":"en","slideLanguage":"","speakerIDs":["nazanin-delam"],"startsAt":"17:15","endsAt":"17:45","room":"C","date":"day1"}},{"node":{"uuid":"nobuhiko-sawai","title":"Performance tuning in EC site with GraphQL","titleJa":"GraphQLを用いたECサイトにおけるパフォーマンス改善","description":"Overview: This talk will be about performance tuning based on actual case he experienced during renewal of E-Commerce site. The site is powered by GraphQL + React + SSR, and he will be talking about basic performance tuning as well as actual usecase of GraphQL.\n\nDuring renewal, we were using GraphQL + React + SSR, but as a result of prioritizing the release, the performance was not up to par, and speed insight showed 20s. As E-Commerce site requires decent amounf of items, and show special sales at time, the approach to improving the performance can be a bit different from static sites such as news websites. With this renewal, we were able to improve performance of a non-performant site to xxx (improvent is ongoing).\n\nWe will go in details for:\n\n- Separating the issue by applying appropriate performance measurement, using tools such as Speed insight and increasee performance of server by using APM tools usch as DataDog.\n- Improvement in Fronet-end side. (reducing bundle size, and utilizing lazy-loading)\n- Manage cache approprately (using HTML cache and separate user belonging contents to design GraphQL queries that can easily be cached.)","descriptionJa":"概要: ECサイトリニューアルにおける事例を題材にサービスの性能改善の方法を実際の事例をもとにお話します。該当のサイトはGraphQL + React + SSRを導入しており、ベーシックな性能改善の話からGraphQLの活用例まで含めてお話する予定です。\n\nECサイトはリニューアル時にはGraphQL + React + SSRといった構成を採用していましたが、リリースを優先した結果、性能が十分ではなく、speed insightで20点台でした。ECサイトは商品数やキャンペーンによる価格変更などがあり、ニュースサイトのような静的コンテンツの多いサイトとは異なるパフォーマンス改善が求められます。こうした非常に低いパフォーマンスのサイトをn点（現在鋭意改善中）まで引き上げた事例を紹介します。\n\n具体的には以下のような内容を紹介する予定です。\n* 計測環境の導入による課題の抽出 (Speed insightの活用やDatadogなどのAPMツールを活用した計測環境の導入とそれによるサーバー側のパフォーマンス改善など）\n* フロントエンドサイドにおける改善 (bundle sizeの改善やlazy-loadの導入）\n* キャッシュ戦略 (HTML cacheやuser belongingなコンテンツを分離することによるcacheの効きやすいGraphQLのquery設計）","spokenLanguage":"ja","slideLanguage":"","speakerIDs":["nobuhiko-sawai"],"startsAt":"14:15","endsAt":"14:45","room":"C","date":"day2"}},{"node":{"uuid":"okuno-kentaro","title":"Building the layered server application achieved by InversifyJS","titleJa":"InversifyJSを用いたレイヤードアーキテクチャの構築","description":"We have traditionally suffered from tightly coupled applications. The complexity of dependencies hinders testing and leads to confusion. Let's simplify it using the library InversifyJS for DIP (Dependency Inversion Principle).\n\nI will introduce the construction of a server application that combines InversifyJS, Knex.js, Express, and TypeScript.","descriptionJa":"我々はかつてから、大きなアプリケーションを開発する際に、密結合に悩まされてきました。 依存関係の複雑さがテストを妨げ、生産性を低下させます。そこでDIP（依存性逆転の原則）を実現するためのライブラリ \"InversifyJS\"を導入することで、この問題を解決しましょう。\n\nInversifyJS, Knex.js, Express、そしてTypeScriptを組み合わせたサーバーアプリケーションの設計を紹介します。","spokenLanguage":"ja","slideLanguage":"","speakerIDs":["okuno-kentaro"],"startsAt":"11:00","endsAt":"11:30","room":"C","date":"day2"}},{"node":{"uuid":"praveen-yedidi","title":"Predictive Prefetching for improved performance","titleJa":"予測的 Prefetching によるパフォーマンス改善","description":"This talk outlines an idea for applying a data-driven approach to optimising loading performance on the web using Guess JS. By building a model of pages a user is likely to visit, given an arbitrary entry-page, a solution could calculate the likelihood a user will visit a given next page or set of pages and prefetch resources for them while the user is still viewing their current page. This has the possibility of improving page-load performance for subsequent page visits as there's a strong chance a page will already be in the user's cache.","descriptionJa":"このトークでは Guess JS による Web におけるデータドリブンなパフォーマンス改善のアイデアについて話します。エントリーページからユーザがアクセスするであろうページのモデルを作成し、ユーザがまだ読んでいる間にそのページやページ郡の Prefetch を行いあらかじめ読み込んでおく。これによってユーザが次に読み込むページが高速になります、なぜならそれらのページはすでにキャッシュされているから。","spokenLanguage":"en","slideLanguage":"","speakerIDs":["praveen-yedidi"],"startsAt":"18:45","endsAt":"18:55","room":"A","date":"day1"}},{"node":{"uuid":"rowdy-rabouw","title":"Browser APIs: the unknown Super Heroes","titleJa":"Browser APIs: 知られざるヒーロー達","description":"Still think browsers are only capable of parsing HTML, CSS and JavaScript? Think again!\nBrowsers have become much more powerful and contain numerous APIs that can enrich the user experience or are just plain fun.\n\nThis talk will introduce you to some of them (like Bluetooth, battery, speech, audio, location, ...) and show you how easy it is to unleash their power with JavaScript.","descriptionJa":"未だにブラウザは HTML、CSS、JavaScript をパースするだけのものだと思っていませんか？考え直しましょう！\nブラウザはパワフルな成長を遂げ、UX の向上を測ったり、いろんな楽しいことができる数々の API が用意されています。\n\nこのトークでは、それらの API の一部、(Bluetooth, battery, speech, audio, location 等)を紹介し、その導入がいかに楽にできるのかについてお伝えします。","spokenLanguage":"en","slideLanguage":"","speakerIDs":["rowdy-rabouw"],"startsAt":"15:30","endsAt":"16:00","room":"A","date":"day2"}},{"node":{"uuid":"s-greif-r-benitte","title":"The State of JavaScript","titleJa":"The State of JavaScript","description":"We run the yearly State of JavaScript survey (http://stateofjs.com). In this talk, we'll introduce the project, take a look back at past surveys and trends, and maybe even preview some of the results from the upcoming 2019 survey.","descriptionJa":"我々は毎年 State of JavaScript (http://stateofjs.com) という JavaScript に関するアンケートを行っています。この発表では State of JavaScript についての紹介や、以前のアンケート結果やトレンドについて話していきます。さらに来たる今年のアンケートの結果のプレビューも行うかもしれません。","spokenLanguage":"en","slideLanguage":"","speakerIDs":["benitte-raphael","sacha-greif"],"startsAt":"13:30","endsAt":"14:00","room":"A","date":"day1"}},{"node":{"uuid":"sho-miyamoto","title":"Wrap-up: Runtime-friendly JavaScript","titleJa":"Wrap-up: Runtime-friendly JavaScript","description":"Let's wrap up what runtime-friendly performant JavaScript is like, introducing how runtime(such as v8, node.js etc.) handles scripts: Internal Representation, JIT, Eventloop etc. I will also mention tools(node options, chrome devtool) and the overhead of normal language feature(like object instantiation and Map/Set).\n\nPlot (draft)\n- Fundamentals\n   - Runtime\n   - IR & JIT\n- Node\n   - Async & non-blocking I/O\n   - Stream\n   - Eventloop\n       - libuv\n- V8\n   - Crankshaft, FullCodeGen, TurboFun, Ignition\n- Internal Representation\n   - Object IR\n       - elements & properties\n       - Hidden Class\n       - JSON.parse\n   - String IR\n       - flatstr\n   - Array IR\n   - Number IR\n- JIT\n   - Hot code\n   - Inline Cache\n- Tools\n   - trace: opt, deopt, ic\n   - chrome devtool\n   - (d8)\n- Principle of high performance\n   - Application\n       - Maintainability is first\n           - Various people will join your team\n       - Choose performant libraries\n           - Core functionarities are run many times\n       - Use util library instead of your own ones\n           - tested\n           - performant\n           - used\n   - Library\n       - Low-overhead is nicer\n           - (TBD)\n- Techniques\n   - Avoid runtime overhead\n       - Object instantiation\n       - Map, Set, Object\n       - Regexp\n   - Avoid blocking I/O\n       - Sync, Async\n       - Macro/micro tasks\n   - PIFE/IIFE\n- Performant libraries\n   - bluebird\n   - ajv\n   - pico(nearForm)\n   - fastify(nearForm)\n- Appendix\n   - node-gyp\n   - quickjs, hermes","descriptionJa":"実行時に高速ランタイムフレンドリーな JavaScript とはどのようなものなのか？\nこのトークでは、v8, node.js などのランタイムが Internal Representation, JIT, Eventloop などを使用し、スクリプトをどの用に処理しているかについて話します。\nさらに、node options や chrome devtool などのツールを使う上でのテクニックや、\nobject のインスタンス化や Map, Set などの言語機能がどのような Overhead を抱えているかについて発表します。\n\nPlot (draft)\n\n- Fundamentals\n  - Runtime\n  - IR & JIT\n- Node\n  - Async & non-blocking I/O\n  - Stream\n  - Eventloop\n    - libuv\n- V8\n  - Crankshaft, FullCodeGen, TurboFun, Ignition\n- Internal Representation\n  - Object IR\n    - elements & properties\n    - Hidden Class\n    - JSON.parse\n  - String IR\n    - flatstr\n  - Array IR\n  - Number IR\n- JIT\n  - Hot code\n  - Inline Cache\n- Tools\n  - trace: opt, deopt, ic\n  - chrome devtool\n  - (d8)\n- Principle of high performance\n  - Application\n    - Maintainability is first\n      - Various people will join your team\n    - Choose performant libraries\n      - Core functionarities are run many times\n    - Use util library instead of your own ones\n      - tested\n      - performant\n      - used\n  - Library\n    - Low-overhead is nicer\n      - (TBD)\n- Techniques\n  - Avoid runtime overhead\n    - Object instantiation\n    - Map, Set, Object\n    - Regexp\n  - Avoid blocking I/O\n    - Sync, Async\n    - Macro/micro tasks\n  - PIFE/IIFE\n- Performant libraries\n  - bluebird\n  - ajv\n  - pico(nearForm)\n  - fastify(nearForm)\n- Appendix\n  - node-gyp\n  - quickjs, hermes","spokenLanguage":"ja","slideLanguage":"","speakerIDs":["sho-miyamoto"],"startsAt":"15:30","endsAt":"16:00","room":"B","date":"day1"}},{"node":{"uuid":"samuel-agnew","title":"Playing Pokémon Together with Node.js","titleJa":"Playing Pokémon Together with Node.js","description":"Pocket Monsters filled many of our childhoods, and some of our adulthoods, with joy. In this live coding adventure, we will recapture the magic of playing Pokémon together with the help of a Twilio phone number built with server-side JavaScript interacting with Gameboy emulator scripts. By the end of this session, you will learn how to write video game emulator scripts and interact with them using Node.js and Express.","descriptionJa":"ポケモンは多くの人の幼少期と、一部の人は成長してからも共にあり、喜びを与えてくれた。このライブコーディングセッションでは、その魔法のような喜びを Twilio の電話番号を組み込んだ Server Side JS で作成された Gameboy Emulator scripts で再現しよう。このセッションが終わった頃には、あなたはゲームの Emulator scripts を書き、それを Node.js と Express で動かせるようになるだろう。","spokenLanguage":"en","slideLanguage":"","speakerIDs":["samuel-agnew"],"startsAt":"16:00","endsAt":"16:30","room":"C","date":"day1"}},{"node":{"uuid":"sponsor-talk-1","title":"Sponsor talk (mediba, Mercari, Cybozu, CureApp)","titleJa":"Sponsor talk (mediba, メルカリ, サイボウズ, CureApp)","description":"","descriptionJa":"","spokenLanguage":"ja","slideLanguage":"","speakerIDs":[],"startsAt":"18:15","endsAt":"18:45","room":"A","date":"day1"}},{"node":{"uuid":"shirley-wu","title":"Build an interactive data visualization with Vue.js and D3.js","titleJa":"Vue.js で D3.js を使ったインタラクティブなデータの可視化","description":"As we generate more and more data in this world, many companies are now prioritizing visualizing these data to make sense of them.  D3.js is the most powerful tool for building custom data visualizations in the web, but also has quite a learning curve.  In this workshop, we will learn how to use D3.js to translate raw data into what we need to display them on a webpage, and use Vue.js to render them to the DOM and manage interactions between them.\n\nWith Vue.js and D3.js together, we can make highly custom, complex interactive visualizations in just a few hundred lines of code.","descriptionJa":"この世に新たなデータを増やしていくたびに、多くの会社は集めたデータを自分達がわかるように可視化することに注力を上げています。D3.js は Web 上で好きなようにデータの可視化を行うための最高のツールですが、 習い始めがとても難しいです。このワークショップでは、D3.js の使い方を学び、生データを Web サイトで表示できる形に変換し、Vue.js を使って DOM に描画してユーザが動かせるところまで持っていきます。\n\nVue.js と D3.js を組み合わせれば、数百行のコードでインタラクティブでカスタマイズ可能なデータの可視化が実現できます。","spokenLanguage":"en","slideLanguage":"","speakerIDs":["shirley-wu"],"startsAt":"11:00","endsAt":"13:00","room":"B","date":"day2"}},{"node":{"uuid":"sam-bellen","title":"Passwords are so 1990","titleJa":"パスワードは90年代の代物だ","description":"As long as we’ve been using the internet, and way before that, we have been authenticating through some sort of username and password combination. It has become the standard. With the ever increasing number of web-apps, we’re seeing more and more data breaches as well. What if we could build our authentication processes in a way the user doesn’t need a password?\n\nIn this talk I will give a quick overview of the past, present and future of authentication. From basic authentication to passwordless biometric authentication using the web authentication API, and everything in between. The audience does not need any specific knowledge as this talk will not go into implementation details, but aims to give a view of what’s to come in terms of authentication.","descriptionJa":"古代の時代から我々は認証プロセス何かしらのユーザー名とパスワードを組み合わせて行ってきた。それがあたりまえだった。現代の無限に増え続ける Web アプリの裏で、データブリーチの被害も増え続けている。もし認証にパスワードが必要なかったとしたらどうだろう？\n\nこのトークでは、認証プロセスのこれまでの歴史、現状、そしてこれからのことについて話します。認証の基本から Web Authentication API を使ったパスワードのいらない生体認証まで、そしてその間にある様々な認証についてを説明します。このトークを聴くのに特別な事前知識は必要ありません。このトークは実装の詳細について語るのではなく、あくまで認証の全貌について、これからどうなっていくのかを伝えていきます。","spokenLanguage":"en","slideLanguage":"","speakerIDs":["sam-bellen"],"startsAt":"13:00","endsAt":"13:30","room":"B","date":"day2"}},{"node":{"uuid":"sponsor-yahoo","title":"Minimum Hands-on Node.js","titleJa":"Minimum Hands-on Node.js","description":"","descriptionJa":"Node.js を最速で理解するための速習型ワークショップ。必要最小限の項目に絞った実用的なノウハウと、初学者が失敗しがちなポイントを体験・解説します。Node.js v12 の内容を含みますのでお楽しみに。\n「JavaScript なら多少わかるけど Node.js はいまひとつ」という方におすすめ。Yahoo! JAPAN の社内およびグループ会社向けに開催されている実績あるワークショップです。この 90 分で Node.js をものにしてください！\n演習を含みますので、Node.js が動作する環境をご用意ください。","spokenLanguage":"ja","slideLanguage":"","speakerIDs":["daiki-kuriyama"],"startsAt":"14:15","endsAt":"16:00","room":"B","date":"day2"}},{"node":{"uuid":"sponsor-recruit","title":"Recruit Speed Hackathon","titleJa":"Recruit Speed Hackathon","description":"Recruit で行われている Speed Hackathon の実際の講習を行います。リクルートでは、ウェブサイトを対象にどこまで高速化できるかを競うハッカソンを開催しています。その場で実際の jsconf.jp のサイトを高速化します。\n演習は数名が1組になって実施します。","descriptionJa":"Recruit で行われている Speed Hackathon の実際の講習を行います。リクルートでは、ウェブサイトを対象にどこまで高速化できるかを競うハッカソンを開催しています。その場で実際の jsconf.jp のサイトを高速化します。\n演習は数名が1組になって実施します。","spokenLanguage":"ja","slideLanguage":"","speakerIDs":["satoshi-arai"],"startsAt":"16:00","endsAt":"17:45","room":"B","date":"day2"}},{"node":{"uuid":"sakakibara","title":"Capacitor: linking JavaScript with Swift/Java, and the future of Web Frontend","titleJa":"JavaScriptとSwift/JavaをつなげるCapacitorと、これからのWeb Frontned.","description":"Capacitor has entered the table as a next generation cross-platform library using web technology.\nIt's unique feature is linking JavaScript with Swift/Java with ease. The world of JavaScript is no longer limited to just Web browsers.\n\nIn this session, he will present the overview of Capacitor, as well as devlopment of its plugins, and where the Web Frontend will be heading in the future.","descriptionJa":"Web技術を使った次世代のクロスプラットフォームライブラリとしてCapacitorが登場しました。特徴は何といっても、JavaScriptとSwift/Javaの連携容易性です。JavaScriptの世界はWebブラウザに留まらない時代がやってきました。\n\n本セッションではCapacitorの概要とプラグイン開発、そしてWeb Frontendが今後どうなっていくかを考えます。","spokenLanguage":"ja","slideLanguage":"","speakerIDs":["sakakibara"],"startsAt":"16:00","endsAt":"16:30","room":"C","date":"day2"}},{"node":{"uuid":"satoshi-ebihara","title":"Developing with Elm in a large application","titleJa":"大規模アプリケーション開発でのElm実践","description":"I will be talking about Elm, an AltJS that has been the recent center of attention. Elm is a pure functional programming language. Usually, when we imagine a pure functional programming languages, they are often hard to work with, but Elm has some functions limited to have an easier learning curve. We have a profuct called Unipos, which is built with Elm with 6 front-end engineers. We have over 70k lines of Elm code in our production. This talk will be about my experience of using Elm in a large production, as well as some some trouble we had while making our product, Unipos.","descriptionJa":"最近話題に上がるようになってきたAltJSのElmについてご紹介します。\nElmは純粋関数型プログラミング言語です。一般的な純粋関数型プログラミング言語は取っ付きにくく敷居が高いイメージがありますが、Elmはあえて言語機能を絞ることで簡単で安全なプログラムを書けるように設計されています。\nElmを使用しているUniposというプロダクトはフロントエンドエンジニア6人、Elmだけで7万LOCという規模で開発しています。\n実際にElmを大規模アプリケーション開発に使用して感じていることを、Uniposを題材にして失敗談も踏まえてお話します。","spokenLanguage":"ja","slideLanguage":"","speakerIDs":["satoshi-ebihara"],"startsAt":"16:45","endsAt":"17:15","room":"C","date":"day2"}},{"node":{"uuid":"sponsor-talk-2","title":"Sponsor talk Yahoo! Japan, Recruit, Dwango DMM, Twilio","titleJa":"Sponsor talk Yahoo! Japan, リクルート, ドワンゴ, DMM, Twilio","description":"","descriptionJa":"","spokenLanguage":"ja","slideLanguage":"","speakerIDs":[],"startsAt":"18:00","endsAt":"18:30","room":"A","date":"day2"}},{"node":{"uuid":"takuto-wada","title":"JavaScript AST programming: Introduction and beyond","titleJa":"JavaScript AST プログラミング: 入門とその1歩先へ","description":"With the appearence of Babel and ESLint, the opportunity to play around with JavaScript's AST has been increasing. Still, most programmers seem to have never touched AST. In this session, he will begin with an introduction to AST, and explain some key points of programming in JavaScript AST, by creating a tool in a live coding format.","descriptionJa":"Babel や ESLint の登場により JavaScript の AST に触れる機会は若干増えてきましたが、それでもほとんどのプログラマは触れたことがないのではないかと思います。このセッションでは、まず JavaScript AST の入門から始まり、ライブコーディング形式で実際にツールを作りながら、 JavaScript AST を扱うプログラミングの勘所をご覧いただきます。","spokenLanguage":"ja","slideLanguage":"","speakerIDs":["takuto-wada"],"startsAt":"14:15","endsAt":"14:45","room":"C","date":"day1"}},{"node":{"uuid":"takeshi-kato","title":"Understanding Streams API","titleJa":"Streams APIをちゃんと理解する","description":"Streams API is very hard to understand. Its usecases are still not much known to public. With the era of 5G coming around the corder, we may get an increase of video streaming with large files. Streams API will come in handy for those situations. In this talk, he will be talking about Streams API and its usecase, and how it works behind the scene.\n\n- This talk will be about Streams Web API. It will not include Stream in Node.js","descriptionJa":"なかなか理解するのが難しいStreams API。その使いどころも未だ未知数です。5G時代を目前に控えた今、Web上でさらに大容量の動画などが配信され始めるかもしれません。そんなときに活躍するであろうStreams APIについて簡単なユースケースと共に仕組みを紹介します。\n\n※今回の内容はWeb APIとしてのStreamsです。Node.jsのStreamは含まれていません。","spokenLanguage":"ja","slideLanguage":"","speakerIDs":["takeshi-kato"],"startsAt":"16:45","endsAt":"17:15","room":"B","date":"day1"}},{"node":{"uuid":"toru-kobayashi","title":"Make it Declarative with React","titleJa":"Make it Declarative with React","description":"React is a JavaScript library for building user interfaces, which make UI programming declarative.\n\nWhat's the benefits of declarative programming over imperative programming?\nI'm going to explain why declarative programming is useful.\n\nDo you know that React isn't only for DOM?\nYou probably imagine react-native, which is to build Native Apps with React.\n\nWhat about other environments?\n\nReact has a way to create custom renderers so you can make anything declarative with React!!!\n\nIn this talk, I'm going to introduce the architecture of custom renderers and some ideas about existing custom renderers and build a new custom renderer on live coding!!!","descriptionJa":"Reactは宣言的にUIを構築できるJavaScriptのライブラリです。\n\nこのトークではまず最初に、手続き的ではなく宣言的にUIを構築することのメリットについて改めて解説します。\n\nReactがDOM以外の環境に対しても使われていることを知っていますか？\nおそらく、ネイティブアプリを構築するためのReact Nativeについては知っている人も多いのではないでしょうか？\n\n他の環境についてはどうしょう？\n\nReactはそのためのカスタムレンダラの仕組みを持っています。\nそれを使うことで様々なものをReactを使って宣言的に記述出来るようになります！\n\nこのトークでは、カスタムレンダラのアーキテクチャや既存のカスタムレンダラについての紹介だけでなく、独自のカスタムレンダラをライブで作ってみたいと思います！\n\n※このトークは英語で行う予定ですが、日本語での補足も入れてながら行いたいと思います。","spokenLanguage":"en","slideLanguage":"","speakerIDs":["toru-kobayashi"],"startsAt":"17:15","endsAt":"17:45","room":"B","date":"day1"}},{"node":{"uuid":"tetsuharu-ohzeki","title":"Your benchmark may not guide a real application performance","titleJa":"Your benchmark may not guide a real application performance","description":"Are you working on improving a performance?\n\nBenchmark is one of the most important to shape a performance and evaluate an application. It’s always hot topic for a developer to measure a meaningful score by creating a benchmark and we tackle to try to make our application faster. A good benchmark is helpful to improve the performance for your application.\n\nHowever, it’s hard to create a helpful benchmark for your application because it requires an insight into a targeted software domain through profiling, observation, and development cycle. If you lack the insight, your application would never be faster.\n\nIn this session, we’ll talk about creating a helpful benchmark is hard and talk about lessons for an optimization with using a benchmark and tools from Web Engine knowledge.","descriptionJa":"皆さんはソフトウェアパフォーマンスの改善に取り組んでいますか？\n\nベンチマークはアプリケーションのパフォーマンスを評価し形成するために最も重要なものの1つです。 ベンチマークの作成、意味のあるスコアの測定、それらを用いた実際のアプリケーションの高速化は開発者にとって常にホットな話題として存在しています。そして、優れたベンチマークはアプリケーションのパフォーマンスを向上させるのに何よりも役立ちます。\n\nしかしながら、アプリケーション開発において真に役立つベンチマークを作成することは非常に難しい取り組みのひとつでもあります。プロファイリング、監視、および開発サイクルを通じてターゲットソフトウェアドメインに対する洞察を必要とされるからです。もしこの洞察が不足している場合、アプリケーションは決して高速になることはありません。\n\nこのセッションでは、有用なベンチマークを作成するのは難しいということ、およびWeb Engineの知識に基づいたベンチマークとツールを利用した最適化についての知見について説明します。","spokenLanguage":"ja","slideLanguage":"","speakerIDs":["tetsuharu-ohzeki"],"startsAt":"15:30","endsAt":"16:00","room":"C","date":"day2"}},{"node":{"uuid":"yoshiki-shibukawa","title":"Web Components era phase 2","titleJa":"Web Components era phase 2","description":"WebComponents has been said to be the \"upcoming feature\", but it still has yet to be standarized. However, with Firefox supporting WebComponents, and Edge becoming Chromium base, we can say that we will get 100% native support in browsers. WebComponents can be integrated with existing products, and we can also reduce CPU cost of server side rendering. \n\nhttps://qiita.com/shibukawa/private/5a36147ec103d35c1b5e","descriptionJa":"WebComponentsは長らく「将来の技術」と言われて来ましたが普及には至っていません。しかし、ブラウザのネイティブサポートが昨年末のFirefoxのサポートとEdgeのChromium化によってほぼ100%になることが見込まれ、既存の開発方法論との組み合わせの親和性が上がり、またサーバーサイドレンダリングというサーバーCPU負荷の高い処理の負荷軽減も期待できます。\n\nhttps://qiita.com/shibukawa/private/5a36147ec103d35c1b5e","spokenLanguage":"ja","slideLanguage":"","speakerIDs":["yoshiki-shibukawa"],"startsAt":"18:55","endsAt":"19:05","room":"A","date":"day1"}},{"node":{"uuid":"yosuke-furukawa","title":"JSConf Panel Talks","titleJa":"","description":"Do you have any suggestions/opinions/requests to JSConf organizers?\nIf you have those requests, feel free to join this session and request us.\nGuest panelist is Jan Lehnardt aka JSConf EU organizer.\nJSConf Panel url => https://app.sli.do/event/woeivd3o/live/questions","descriptionJa":"JSConf JP 内でコミュニティのオーガナイザーに求めていることをリクエストできるようにします。\nゲストには JSConf EU のオーガナイザーの Jan Lehnardt をお呼びし、JSConf をより良くするためのパネルトークを行います。\nJSConf Panel url => https://app.sli.do/event/woeivd3o/live/questions","spokenLanguage":"en","slideLanguage":"","speakerIDs":["jan-lehnardt","yosuke-furukawa"],"startsAt":"14:15","endsAt":"14:45","room":"A","date":"day2"}}]}},"pageContext":{"isCreatedByStatefulCreatePages":true}}}