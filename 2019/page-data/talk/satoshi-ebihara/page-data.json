{"componentChunkName":"component---src-templates-speaker-tsx","path":"/talk/satoshi-ebihara","webpackCompilationHash":"478e6a326fd41b4068e2","result":{"pageContext":{"isCreatedByStatefulCreatePages":false,"speakers":[{"uuid":"satoshi-ebihara","name":"海老原 圭吾","biography":"","biographyJa":"Fringe81株式会社でフロントエンドエンジニアをしています。\n普段はUniposというElmで作られたプロダクトの開発をしています。"}],"avatars":[{"originalName":"satoshi-ebihara.jpg","originalImg":"/2019/static/60f9a4cd2d393c794eacc8355fc48059/94383/satoshi-ebihara.jpg","aspectRatio":1,"src":"/2019/static/60f9a4cd2d393c794eacc8355fc48059/2be9e/satoshi-ebihara.jpg","srcSet":"/2019/static/60f9a4cd2d393c794eacc8355fc48059/79993/satoshi-ebihara.jpg 66w,\n/2019/static/60f9a4cd2d393c794eacc8355fc48059/2e0c2/satoshi-ebihara.jpg 131w,\n/2019/static/60f9a4cd2d393c794eacc8355fc48059/2be9e/satoshi-ebihara.jpg 262w,\n/2019/static/60f9a4cd2d393c794eacc8355fc48059/7d55c/satoshi-ebihara.jpg 393w,\n/2019/static/60f9a4cd2d393c794eacc8355fc48059/92a13/satoshi-ebihara.jpg 524w,\n/2019/static/60f9a4cd2d393c794eacc8355fc48059/94383/satoshi-ebihara.jpg 3000w","srcWebp":"/2019/static/60f9a4cd2d393c794eacc8355fc48059/fabb6/satoshi-ebihara.webp","srcSetWebp":"/2019/static/60f9a4cd2d393c794eacc8355fc48059/7fc16/satoshi-ebihara.webp 66w,\n/2019/static/60f9a4cd2d393c794eacc8355fc48059/78dfd/satoshi-ebihara.webp 131w,\n/2019/static/60f9a4cd2d393c794eacc8355fc48059/fabb6/satoshi-ebihara.webp 262w,\n/2019/static/60f9a4cd2d393c794eacc8355fc48059/b3aeb/satoshi-ebihara.webp 393w,\n/2019/static/60f9a4cd2d393c794eacc8355fc48059/82dd0/satoshi-ebihara.webp 524w,\n/2019/static/60f9a4cd2d393c794eacc8355fc48059/14d8c/satoshi-ebihara.webp 3000w","sizes":"(max-width: 262px) 100vw, 262px"}],"talk":{"uuid":"satoshi-ebihara","title":"Developing with Elm in a large application","titleJa":"大規模アプリケーション開発でのElm実践","description":"I will be talking about Elm, an AltJS that has been the recent center of attention. Elm is a pure functional programming language. Usually, when we imagine a pure functional programming languages, they are often hard to work with, but Elm has some functions limited to have an easier learning curve. We have a profuct called Unipos, which is built with Elm with 6 front-end engineers. We have over 70k lines of Elm code in our production. This talk will be about my experience of using Elm in a large production, as well as some some trouble we had while making our product, Unipos.","descriptionJa":"最近話題に上がるようになってきたAltJSのElmについてご紹介します。\nElmは純粋関数型プログラミング言語です。一般的な純粋関数型プログラミング言語は取っ付きにくく敷居が高いイメージがありますが、Elmはあえて言語機能を絞ることで簡単で安全なプログラムを書けるように設計されています。\nElmを使用しているUniposというプロダクトはフロントエンドエンジニア6人、Elmだけで7万LOCという規模で開発しています。\n実際にElmを大規模アプリケーション開発に使用して感じていることを、Uniposを題材にして失敗談も踏まえてお話します。","spokenLanguage":"ja","slideLanguage":"","speakerIDs":["satoshi-ebihara"],"date":"day2","startsAt":"16:45","endsAt":"17:15","room":"B"}}}}